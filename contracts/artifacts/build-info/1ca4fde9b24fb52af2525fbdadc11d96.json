{
	"id": "1ca4fde9b24fb52af2525fbdadc11d96",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/OpenZeppelin.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.2 <0.9.0;\n\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\";\n\ncontract Token is ERC20, AccessControl {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor(address minter) ERC20(\"Blockchain Unifecaf Token\", \"BUT\") {\n        _grantRole(MINTER_ROLE, minter);\n    }\n    function mint(address to, uint256 amount) public {\n        require(hasRole(MINTER_ROLE, msg.sender), \"Only minter\");\n        _mint(to, amount);\n    }\n}\n\n\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/OpenZeppelin.sol": {
				"Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OpenZeppelin.sol\":293:681  contract Token is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/OpenZeppelin.sol\":407:525  constructor(address minter) ERC20(\"Blockchain Unifecaf Token\", \"BUT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x19\n  dup2\n  mstore\n  0x20\n  add\n  0x426c6f636b636861696e20556e69666563616620546f6b656e00000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4255540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/OpenZeppelin.sol\":487:518  _grantRole(MINTER_ROLE, minter) */\n  tag_11\n    /* \"contracts/OpenZeppelin.sol\":376:400  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/OpenZeppelin.sol\":511:517  minter */\n  dup3\n    /* \"contracts/OpenZeppelin.sol\":487:497  _grantRole */\n  shl(0x20, tag_12)\n    /* \"contracts/OpenZeppelin.sol\":487:518  _grantRole(MINTER_ROLE, minter) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/OpenZeppelin.sol\":407:525  constructor(address minter) ERC20(\"Blockchain Unifecaf Token\", \"BUT\") {... */\n  pop\n    /* \"contracts/OpenZeppelin.sol\":293:681  contract Token is ERC20, AccessControl {... */\n  jump(tag_13)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_15\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_16)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_17\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_18\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_19)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_14)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_17:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_14:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_19:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_26:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_27:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_56\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_28:\n    /* \"#utility.yul\":641:665   */\n  tag_58\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_27\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_59:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_29:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_61\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_28\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_64\n  tag_24\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":932:1051   */\ntag_63:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_65\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_30:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_31:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_32:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_33:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_70:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_72\n  tag_32\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1909:1993   */\ntag_71:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_34:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_35:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_36:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_37:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_77\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_36\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2624:2663   */\n  tag_78\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_36\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_38:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_39:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_40:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_82\n    /* \"#utility.yul\":3013:3047   */\n  tag_83\n    /* \"#utility.yul\":3022:3046   */\n  tag_84\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_38\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3013:3047   */\n  tag_39\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2995:3048   */\n  tag_38\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_41:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_42:\n    /* \"#utility.yul\":3251:3290   */\n  tag_87\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_40\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3312:3403   */\n  tag_88\n    /* \"#utility.yul\":3361:3402   */\n  tag_89\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_41\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_37\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_43:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_44:\n    /* \"#utility.yul\":3572:3604   */\n  tag_92\n  tag_43\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3613:3678   */\n  tag_93\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_42\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_45:\n    /* \"#utility.yul\":3750:3870   */\ntag_95:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_98\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_44\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_95)\ntag_97:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_46:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_101\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_34\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4101:4130   */\n  tag_102\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_35\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_103:\n    /* \"#utility.yul\":4328:4408   */\n  tag_104\n    /* \"#utility.yul\":4384:4406   */\n  tag_105\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_35\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_45\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_100:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_47:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_48:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_108\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_47\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_49:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_110\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_48\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_8:\n    /* \"#utility.yul\":5145:5182   */\n  tag_112\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_30\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_114\n  tag_31\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5233:5289   */\ntag_113:\n    /* \"#utility.yul\":5313:5351   */\n  tag_115\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_33\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5398:5465   */\n  tag_116\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_46\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_119:\n    /* \"#utility.yul\":6339:6406   */\n  tag_120\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_49\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_117)\n    /* \"#utility.yul\":5560:6178   */\ntag_118:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_121\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_34\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_122:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_122)\ntag_124:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_126\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_48\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_125:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_117:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/OpenZeppelin.sol\":293:681  contract Token is ERC20, AccessControl {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OpenZeppelin.sol\":293:681  contract Token is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/OpenZeppelin.sol\":530:679  function mint(address to, uint256 amount) public {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OpenZeppelin.sol\":338:400  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_18:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_110\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_118\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_125\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_124:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_127:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_131\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_132\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_132:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_133\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_133:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin.sol\":530:679  function mint(address to, uint256 amount) public {... */\n    tag_67:\n        /* \"contracts/OpenZeppelin.sol\":597:629  hasRole(MINTER_ROLE, msg.sender) */\n      tag_136\n        /* \"contracts/OpenZeppelin.sol\":376:400  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/OpenZeppelin.sol\":618:628  msg.sender */\n      caller\n        /* \"contracts/OpenZeppelin.sol\":597:604  hasRole */\n      tag_75\n        /* \"contracts/OpenZeppelin.sol\":597:629  hasRole(MINTER_ROLE, msg.sender) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/OpenZeppelin.sol\":589:645  require(hasRole(MINTER_ROLE, msg.sender), \"Only minter\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/OpenZeppelin.sol\":655:672  _mint(to, amount) */\n      tag_140\n        /* \"contracts/OpenZeppelin.sol\":661:663  to */\n      dup3\n        /* \"contracts/OpenZeppelin.sol\":665:671  amount */\n      dup3\n        /* \"contracts/OpenZeppelin.sol\":655:660  _mint */\n      tag_141\n        /* \"contracts/OpenZeppelin.sol\":655:672  _mint(to, amount) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/OpenZeppelin.sol\":530:679  function mint(address to, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_104\n      jump\t// in\n    tag_145:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_104\n      jump\t// in\n    tag_146:\n      dup1\n      iszero\n      tag_147\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_148\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_147)\n    tag_148:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_149:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_149\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_152\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_152:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin.sol\":338:400  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_88:\n        /* \"contracts/OpenZeppelin.sol\":376:400  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/OpenZeppelin.sol\":338:400  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_92:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_153\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_153:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_155\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_125\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_157\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_157:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_162\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_163\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_162:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_165\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_165:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_170\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_163\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_170:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_172:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_177\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_178\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_177:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_180\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_181\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_182\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_180:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_184\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_184:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_185\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_186\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_183)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_185:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_183:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_134:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_189\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_189:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_191\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_188)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_190:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_188:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_141:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_194:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_196\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_178\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_196:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_163:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_198:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_200:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_203\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_202:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_178:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_208)\n    tag_205:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_209:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_208:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_212)\n    tag_211:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_212:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_213\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_182:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_215\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_215:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_216\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap3\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_220:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_222:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_223:\n        /* \"#utility.yul\":561:584   */\n      tag_257\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_222\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_258:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_224:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_260\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_223\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_263\n      tag_220\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":833:952   */\n    tag_262:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_264\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_224\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_225:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_226:\n        /* \"#utility.yul\":1268:1289   */\n      tag_267\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_225\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_269\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_226\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_227:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_228:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_229:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_230:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_231:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_275\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_227\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2222:2293   */\n      tag_276\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_228\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_277\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_229\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2392:2421   */\n      tag_278\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_230\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_33:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_280\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_231\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_232:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_233:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_283\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_232\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_234:\n        /* \"#utility.yul\":3060:3084   */\n      tag_285\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_233\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      dup1\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_286:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_235:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_288\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_234\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_236:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_237:\n        /* \"#utility.yul\":3416:3440   */\n      tag_291\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_236\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      dup1\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_292:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_238:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_294\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_237\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_36:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup1\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_297\n      tag_220\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3709:3828   */\n    tag_296:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_298\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_235\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_299\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_238\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_239:\n        /* \"#utility.yul\":4183:4207   */\n      tag_301\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_236\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_42:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_303\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_239\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:5067   */\n    tag_45:\n        /* \"#utility.yul\":4525:4531   */\n      0x00\n        /* \"#utility.yul\":4533:4539   */\n      dup1\n        /* \"#utility.yul\":4541:4547   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup5\n        /* \"#utility.yul\":4569:4576   */\n      dup7\n        /* \"#utility.yul\":4565:4588   */\n      sub\n        /* \"#utility.yul\":4561:4593   */\n      slt\n        /* \"#utility.yul\":4558:4677   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":4596:4675   */\n      tag_306\n      tag_220\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4558:4677   */\n    tag_305:\n        /* \"#utility.yul\":4716:4717   */\n      0x00\n        /* \"#utility.yul\":4741:4794   */\n      tag_307\n        /* \"#utility.yul\":4786:4793   */\n      dup7\n        /* \"#utility.yul\":4777:4783   */\n      dup3\n        /* \"#utility.yul\":4766:4775   */\n      dup8\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4741:4794   */\n      tag_235\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4731:4794   */\n      swap4\n      pop\n        /* \"#utility.yul\":4687:4804   */\n      pop\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4869:4922   */\n      tag_308\n        /* \"#utility.yul\":4914:4921   */\n      dup7\n        /* \"#utility.yul\":4905:4911   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      dup8\n        /* \"#utility.yul\":4890:4912   */\n      add\n        /* \"#utility.yul\":4869:4922   */\n      tag_235\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4859:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4932   */\n      pop\n        /* \"#utility.yul\":4971:4973   */\n      0x40\n        /* \"#utility.yul\":4997:5050   */\n      tag_309\n        /* \"#utility.yul\":5042:5049   */\n      dup7\n        /* \"#utility.yul\":5033:5039   */\n      dup3\n        /* \"#utility.yul\":5022:5031   */\n      dup8\n        /* \"#utility.yul\":5018:5040   */\n      add\n        /* \"#utility.yul\":4997:5050   */\n      tag_238\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4987:5050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:5060   */\n      pop\n        /* \"#utility.yul\":4448:5067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5073:5150   */\n    tag_240:\n        /* \"#utility.yul\":5110:5117   */\n      0x00\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5128:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5278   */\n    tag_241:\n        /* \"#utility.yul\":5229:5253   */\n      tag_312\n        /* \"#utility.yul\":5247:5252   */\n      dup2\n        /* \"#utility.yul\":5229:5253   */\n      tag_240\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5219:5254   */\n      eq\n        /* \"#utility.yul\":5209:5272   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      dup1\n        /* \"#utility.yul\":5258:5270   */\n      revert\n        /* \"#utility.yul\":5209:5272   */\n    tag_313:\n        /* \"#utility.yul\":5156:5278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5423   */\n    tag_242:\n        /* \"#utility.yul\":5330:5335   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup2\n        /* \"#utility.yul\":5355:5375   */\n      calldataload\n        /* \"#utility.yul\":5346:5375   */\n      swap1\n      pop\n        /* \"#utility.yul\":5384:5417   */\n      tag_315\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5384:5417   */\n      tag_241\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5284:5423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5758   */\n    tag_50:\n        /* \"#utility.yul\":5488:5494   */\n      0x00\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5516:5523   */\n      dup5\n        /* \"#utility.yul\":5512:5535   */\n      sub\n        /* \"#utility.yul\":5508:5540   */\n      slt\n        /* \"#utility.yul\":5505:5624   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":5543:5622   */\n      tag_318\n      tag_220\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5505:5624   */\n    tag_317:\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5688:5741   */\n      tag_319\n        /* \"#utility.yul\":5733:5740   */\n      dup5\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5713:5722   */\n      dup6\n        /* \"#utility.yul\":5709:5731   */\n      add\n        /* \"#utility.yul\":5688:5741   */\n      tag_242\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5678:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:5751   */\n      pop\n        /* \"#utility.yul\":5429:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:5882   */\n    tag_243:\n        /* \"#utility.yul\":5851:5875   */\n      tag_321\n        /* \"#utility.yul\":5869:5874   */\n      dup2\n        /* \"#utility.yul\":5851:5875   */\n      tag_240\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5846:5849   */\n      dup3\n        /* \"#utility.yul\":5839:5876   */\n      mstore\n        /* \"#utility.yul\":5764:5882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6110   */\n    tag_53:\n        /* \"#utility.yul\":5981:5985   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6008:6017   */\n      dup3\n        /* \"#utility.yul\":6004:6022   */\n      add\n        /* \"#utility.yul\":5996:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6103   */\n      tag_323\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6089:6098   */\n      dup4\n        /* \"#utility.yul\":6085:6102   */\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6032:6103   */\n      tag_243\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5888:6110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6590   */\n    tag_56:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6192:6198   */\n      dup1\n        /* \"#utility.yul\":6241:6243   */\n      0x40\n        /* \"#utility.yul\":6229:6238   */\n      dup4\n        /* \"#utility.yul\":6220:6227   */\n      dup6\n        /* \"#utility.yul\":6216:6239   */\n      sub\n        /* \"#utility.yul\":6212:6244   */\n      slt\n        /* \"#utility.yul\":6209:6328   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":6247:6326   */\n      tag_326\n      tag_220\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6209:6328   */\n    tag_325:\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6392:6445   */\n      tag_327\n        /* \"#utility.yul\":6437:6444   */\n      dup6\n        /* \"#utility.yul\":6428:6434   */\n      dup3\n        /* \"#utility.yul\":6417:6426   */\n      dup7\n        /* \"#utility.yul\":6413:6435   */\n      add\n        /* \"#utility.yul\":6392:6445   */\n      tag_242\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6382:6445   */\n      swap3\n      pop\n        /* \"#utility.yul\":6338:6455   */\n      pop\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6520:6573   */\n      tag_328\n        /* \"#utility.yul\":6565:6572   */\n      dup6\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6545:6554   */\n      dup7\n        /* \"#utility.yul\":6541:6563   */\n      add\n        /* \"#utility.yul\":6520:6573   */\n      tag_235\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":6510:6573   */\n      swap2\n      pop\n        /* \"#utility.yul\":6465:6583   */\n      pop\n        /* \"#utility.yul\":6116:6590   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6596:6682   */\n    tag_244:\n        /* \"#utility.yul\":6631:6638   */\n      0x00\n        /* \"#utility.yul\":6671:6675   */\n      0xff\n        /* \"#utility.yul\":6664:6669   */\n      dup3\n        /* \"#utility.yul\":6660:6676   */\n      and\n        /* \"#utility.yul\":6649:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:6800   */\n    tag_245:\n        /* \"#utility.yul\":6771:6793   */\n      tag_331\n        /* \"#utility.yul\":6787:6792   */\n      dup2\n        /* \"#utility.yul\":6771:6793   */\n      tag_244\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6766:6769   */\n      dup3\n        /* \"#utility.yul\":6759:6794   */\n      mstore\n        /* \"#utility.yul\":6688:6800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:7020   */\n    tag_61:\n        /* \"#utility.yul\":6895:6899   */\n      0x00\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6922:6931   */\n      dup3\n        /* \"#utility.yul\":6918:6936   */\n      add\n        /* \"#utility.yul\":6910:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7013   */\n      tag_333\n        /* \"#utility.yul\":7010:7011   */\n      0x00\n        /* \"#utility.yul\":6999:7008   */\n      dup4\n        /* \"#utility.yul\":6995:7012   */\n      add\n        /* \"#utility.yul\":6986:6992   */\n      dup5\n        /* \"#utility.yul\":6946:7013   */\n      tag_245\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6806:7020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7355   */\n    tag_70:\n        /* \"#utility.yul\":7085:7091   */\n      0x00\n        /* \"#utility.yul\":7134:7136   */\n      0x20\n        /* \"#utility.yul\":7122:7131   */\n      dup3\n        /* \"#utility.yul\":7113:7120   */\n      dup5\n        /* \"#utility.yul\":7109:7132   */\n      sub\n        /* \"#utility.yul\":7105:7137   */\n      slt\n        /* \"#utility.yul\":7102:7221   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":7140:7219   */\n      tag_336\n      tag_220\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7102:7221   */\n    tag_335:\n        /* \"#utility.yul\":7260:7261   */\n      0x00\n        /* \"#utility.yul\":7285:7338   */\n      tag_337\n        /* \"#utility.yul\":7330:7337   */\n      dup5\n        /* \"#utility.yul\":7321:7327   */\n      dup3\n        /* \"#utility.yul\":7310:7319   */\n      dup6\n        /* \"#utility.yul\":7306:7328   */\n      add\n        /* \"#utility.yul\":7285:7338   */\n      tag_235\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7275:7338   */\n      swap2\n      pop\n        /* \"#utility.yul\":7231:7348   */\n      pop\n        /* \"#utility.yul\":7026:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7835   */\n    tag_95:\n        /* \"#utility.yul\":7429:7435   */\n      0x00\n        /* \"#utility.yul\":7437:7443   */\n      dup1\n        /* \"#utility.yul\":7486:7488   */\n      0x40\n        /* \"#utility.yul\":7474:7483   */\n      dup4\n        /* \"#utility.yul\":7465:7472   */\n      dup6\n        /* \"#utility.yul\":7461:7484   */\n      sub\n        /* \"#utility.yul\":7457:7489   */\n      slt\n        /* \"#utility.yul\":7454:7573   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":7492:7571   */\n      tag_340\n      tag_220\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7454:7573   */\n    tag_339:\n        /* \"#utility.yul\":7612:7613   */\n      0x00\n        /* \"#utility.yul\":7637:7690   */\n      tag_341\n        /* \"#utility.yul\":7682:7689   */\n      dup6\n        /* \"#utility.yul\":7673:7679   */\n      dup3\n        /* \"#utility.yul\":7662:7671   */\n      dup7\n        /* \"#utility.yul\":7658:7680   */\n      add\n        /* \"#utility.yul\":7637:7690   */\n      tag_235\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7627:7690   */\n      swap3\n      pop\n        /* \"#utility.yul\":7583:7700   */\n      pop\n        /* \"#utility.yul\":7739:7741   */\n      0x20\n        /* \"#utility.yul\":7765:7818   */\n      tag_342\n        /* \"#utility.yul\":7810:7817   */\n      dup6\n        /* \"#utility.yul\":7801:7807   */\n      dup3\n        /* \"#utility.yul\":7790:7799   */\n      dup7\n        /* \"#utility.yul\":7786:7808   */\n      add\n        /* \"#utility.yul\":7765:7818   */\n      tag_235\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":7755:7818   */\n      swap2\n      pop\n        /* \"#utility.yul\":7710:7828   */\n      pop\n        /* \"#utility.yul\":7361:7835   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7841:8021   */\n    tag_246:\n        /* \"#utility.yul\":7889:7966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7886:7887   */\n      0x00\n        /* \"#utility.yul\":7879:7967   */\n      mstore\n        /* \"#utility.yul\":7986:7990   */\n      0x22\n        /* \"#utility.yul\":7983:7984   */\n      0x04\n        /* \"#utility.yul\":7976:7991   */\n      mstore\n        /* \"#utility.yul\":8010:8014   */\n      0x24\n        /* \"#utility.yul\":8007:8008   */\n      0x00\n        /* \"#utility.yul\":8000:8015   */\n      revert\n        /* \"#utility.yul\":8027:8347   */\n    tag_104:\n        /* \"#utility.yul\":8071:8077   */\n      0x00\n        /* \"#utility.yul\":8108:8109   */\n      0x02\n        /* \"#utility.yul\":8102:8106   */\n      dup3\n        /* \"#utility.yul\":8098:8110   */\n      div\n        /* \"#utility.yul\":8088:8110   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8156   */\n      0x01\n        /* \"#utility.yul\":8149:8153   */\n      dup3\n        /* \"#utility.yul\":8145:8157   */\n      and\n        /* \"#utility.yul\":8176:8194   */\n      dup1\n        /* \"#utility.yul\":8166:8247   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":8232:8236   */\n      0x7f\n        /* \"#utility.yul\":8224:8230   */\n      dup3\n        /* \"#utility.yul\":8220:8237   */\n      and\n        /* \"#utility.yul\":8210:8237   */\n      swap2\n      pop\n        /* \"#utility.yul\":8166:8247   */\n    tag_345:\n        /* \"#utility.yul\":8294:8296   */\n      0x20\n        /* \"#utility.yul\":8286:8292   */\n      dup3\n        /* \"#utility.yul\":8283:8297   */\n      lt\n        /* \"#utility.yul\":8263:8281   */\n      dup2\n        /* \"#utility.yul\":8260:8298   */\n      sub\n        /* \"#utility.yul\":8257:8341   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":8313:8331   */\n      tag_347\n      tag_246\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8257:8341   */\n    tag_346:\n        /* \"#utility.yul\":8078:8347   */\n      pop\n        /* \"#utility.yul\":8027:8347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8514   */\n    tag_247:\n        /* \"#utility.yul\":8493:8506   */\n      0x4f6e6c79206d696e746572000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8489:8490   */\n      0x00\n        /* \"#utility.yul\":8481:8487   */\n      dup3\n        /* \"#utility.yul\":8477:8491   */\n      add\n        /* \"#utility.yul\":8470:8507   */\n      mstore\n        /* \"#utility.yul\":8353:8514   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8520:8886   */\n    tag_248:\n        /* \"#utility.yul\":8662:8665   */\n      0x00\n        /* \"#utility.yul\":8683:8750   */\n      tag_350\n        /* \"#utility.yul\":8747:8749   */\n      0x0b\n        /* \"#utility.yul\":8742:8745   */\n      dup4\n        /* \"#utility.yul\":8683:8750   */\n      tag_228\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8676:8750   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:8852   */\n      tag_351\n        /* \"#utility.yul\":8848:8851   */\n      dup3\n        /* \"#utility.yul\":8759:8852   */\n      tag_247\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8877:8879   */\n      0x20\n        /* \"#utility.yul\":8872:8875   */\n      dup3\n        /* \"#utility.yul\":8868:8880   */\n      add\n        /* \"#utility.yul\":8861:8880   */\n      swap1\n      pop\n        /* \"#utility.yul\":8520:8886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8892:9311   */\n    tag_139:\n        /* \"#utility.yul\":9058:9062   */\n      0x00\n        /* \"#utility.yul\":9096:9098   */\n      0x20\n        /* \"#utility.yul\":9085:9094   */\n      dup3\n        /* \"#utility.yul\":9081:9099   */\n      add\n        /* \"#utility.yul\":9073:9099   */\n      swap1\n      pop\n        /* \"#utility.yul\":9145:9154   */\n      dup2\n        /* \"#utility.yul\":9139:9143   */\n      dup2\n        /* \"#utility.yul\":9135:9155   */\n      sub\n        /* \"#utility.yul\":9131:9132   */\n      0x00\n        /* \"#utility.yul\":9120:9129   */\n      dup4\n        /* \"#utility.yul\":9116:9133   */\n      add\n        /* \"#utility.yul\":9109:9156   */\n      mstore\n        /* \"#utility.yul\":9173:9304   */\n      tag_353\n        /* \"#utility.yul\":9299:9303   */\n      dup2\n        /* \"#utility.yul\":9173:9304   */\n      tag_248\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9165:9304   */\n      swap1\n      pop\n        /* \"#utility.yul\":8892:9311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9317:9435   */\n    tag_249:\n        /* \"#utility.yul\":9404:9428   */\n      tag_355\n        /* \"#utility.yul\":9422:9427   */\n      dup2\n        /* \"#utility.yul\":9404:9428   */\n      tag_233\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9399:9402   */\n      dup3\n        /* \"#utility.yul\":9392:9429   */\n      mstore\n        /* \"#utility.yul\":9317:9435   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9441:9883   */\n    tag_169:\n        /* \"#utility.yul\":9590:9594   */\n      0x00\n        /* \"#utility.yul\":9628:9630   */\n      0x60\n        /* \"#utility.yul\":9617:9626   */\n      dup3\n        /* \"#utility.yul\":9613:9631   */\n      add\n        /* \"#utility.yul\":9605:9631   */\n      swap1\n      pop\n        /* \"#utility.yul\":9641:9712   */\n      tag_357\n        /* \"#utility.yul\":9709:9710   */\n      0x00\n        /* \"#utility.yul\":9698:9707   */\n      dup4\n        /* \"#utility.yul\":9694:9711   */\n      add\n        /* \"#utility.yul\":9685:9691   */\n      dup7\n        /* \"#utility.yul\":9641:9712   */\n      tag_249\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9722:9794   */\n      tag_358\n        /* \"#utility.yul\":9790:9792   */\n      0x20\n        /* \"#utility.yul\":9779:9788   */\n      dup4\n        /* \"#utility.yul\":9775:9793   */\n      add\n        /* \"#utility.yul\":9766:9772   */\n      dup6\n        /* \"#utility.yul\":9722:9794   */\n      tag_239\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9804:9876   */\n      tag_359\n        /* \"#utility.yul\":9872:9874   */\n      0x40\n        /* \"#utility.yul\":9861:9870   */\n      dup4\n        /* \"#utility.yul\":9857:9875   */\n      add\n        /* \"#utility.yul\":9848:9854   */\n      dup5\n        /* \"#utility.yul\":9804:9876   */\n      tag_239\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9441:9883   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9889:10111   */\n    tag_174:\n        /* \"#utility.yul\":9982:9986   */\n      0x00\n        /* \"#utility.yul\":10020:10022   */\n      0x20\n        /* \"#utility.yul\":10009:10018   */\n      dup3\n        /* \"#utility.yul\":10005:10023   */\n      add\n        /* \"#utility.yul\":9997:10023   */\n      swap1\n      pop\n        /* \"#utility.yul\":10033:10104   */\n      tag_361\n        /* \"#utility.yul\":10101:10102   */\n      0x00\n        /* \"#utility.yul\":10090:10099   */\n      dup4\n        /* \"#utility.yul\":10086:10103   */\n      add\n        /* \"#utility.yul\":10077:10083   */\n      dup5\n        /* \"#utility.yul\":10033:10104   */\n      tag_249\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9889:10111   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10117:10297   */\n    tag_250:\n        /* \"#utility.yul\":10165:10242   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10162:10163   */\n      0x00\n        /* \"#utility.yul\":10155:10243   */\n      mstore\n        /* \"#utility.yul\":10262:10266   */\n      0x11\n        /* \"#utility.yul\":10259:10260   */\n      0x04\n        /* \"#utility.yul\":10252:10267   */\n      mstore\n        /* \"#utility.yul\":10286:10290   */\n      0x24\n        /* \"#utility.yul\":10283:10284   */\n      0x00\n        /* \"#utility.yul\":10276:10291   */\n      revert\n        /* \"#utility.yul\":10303:10494   */\n    tag_207:\n        /* \"#utility.yul\":10343:10346   */\n      0x00\n        /* \"#utility.yul\":10362:10382   */\n      tag_364\n        /* \"#utility.yul\":10380:10381   */\n      dup3\n        /* \"#utility.yul\":10362:10382   */\n      tag_236\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10357:10382   */\n      swap2\n      pop\n        /* \"#utility.yul\":10396:10416   */\n      tag_365\n        /* \"#utility.yul\":10414:10415   */\n      dup4\n        /* \"#utility.yul\":10396:10416   */\n      tag_236\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10391:10416   */\n      swap3\n      pop\n        /* \"#utility.yul\":10439:10440   */\n      dup3\n        /* \"#utility.yul\":10436:10437   */\n      dup3\n        /* \"#utility.yul\":10432:10441   */\n      add\n        /* \"#utility.yul\":10425:10441   */\n      swap1\n      pop\n        /* \"#utility.yul\":10460:10463   */\n      dup1\n        /* \"#utility.yul\":10457:10458   */\n      dup3\n        /* \"#utility.yul\":10454:10464   */\n      gt\n        /* \"#utility.yul\":10451:10487   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":10467:10485   */\n      tag_367\n      tag_250\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10451:10487   */\n    tag_366:\n        /* \"#utility.yul\":10303:10494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10500:10832   */\n    tag_218:\n        /* \"#utility.yul\":10621:10625   */\n      0x00\n        /* \"#utility.yul\":10659:10661   */\n      0x40\n        /* \"#utility.yul\":10648:10657   */\n      dup3\n        /* \"#utility.yul\":10644:10662   */\n      add\n        /* \"#utility.yul\":10636:10662   */\n      swap1\n      pop\n        /* \"#utility.yul\":10672:10743   */\n      tag_369\n        /* \"#utility.yul\":10740:10741   */\n      0x00\n        /* \"#utility.yul\":10729:10738   */\n      dup4\n        /* \"#utility.yul\":10725:10742   */\n      add\n        /* \"#utility.yul\":10716:10722   */\n      dup6\n        /* \"#utility.yul\":10672:10743   */\n      tag_249\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":10753:10825   */\n      tag_370\n        /* \"#utility.yul\":10821:10823   */\n      0x20\n        /* \"#utility.yul\":10810:10819   */\n      dup4\n        /* \"#utility.yul\":10806:10824   */\n      add\n        /* \"#utility.yul\":10797:10803   */\n      dup5\n        /* \"#utility.yul\":10753:10825   */\n      tag_243\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":10500:10832   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220891e769c5a02c02a3d3fb4a7f016a9b9b38fc6cd20884cf992dd1d0dca8b720d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_618": {
									"entryPoint": null,
									"id": 618,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_307": {
									"entryPoint": 246,
									"id": 307,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1197": {
									"entryPoint": 592,
									"id": 1197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_131": {
									"entryPoint": 492,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6426:10",
										"nodeType": "YulBlock",
										"src": "0:6426:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "922:274:10",
													"nodeType": "YulBlock",
													"src": "922:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:10",
																"nodeType": "YulBlock",
																"src": "968:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:10"
																			},
																			"nativeSrc": "970:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:10"
																		},
																		"nativeSrc": "970:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:10"
																		},
																		"nativeSrc": "939:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:10",
																		"nodeType": "YulLiteral",
																		"src": "964:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nativeSrc": "935:32:10",
																"nodeType": "YulFunctionCall",
																"src": "935:32:10"
															},
															"nativeSrc": "932:119:10",
															"nodeType": "YulIf",
															"src": "932:119:10"
														},
														{
															"nativeSrc": "1061:128:10",
															"nodeType": "YulBlock",
															"src": "1061:128:10",
															"statements": [
																{
																	"nativeSrc": "1076:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:10"
																				},
																				"nativeSrc": "1147:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:10"
																		},
																		"nativeSrc": "1115:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:10",
														"nodeType": "YulTypedName",
														"src": "892:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:10",
														"nodeType": "YulTypedName",
														"src": "903:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:10",
														"nodeType": "YulTypedName",
														"src": "915:6:10",
														"type": ""
													}
												],
												"src": "845:351:10"
											},
											{
												"body": {
													"nativeSrc": "1261:40:10",
													"nodeType": "YulBlock",
													"src": "1261:40:10",
													"statements": [
														{
															"nativeSrc": "1272:22:10",
															"nodeType": "YulAssignment",
															"src": "1272:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:10"
																},
																"nativeSrc": "1282:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:10",
														"nodeType": "YulTypedName",
														"src": "1244:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:10",
														"nodeType": "YulTypedName",
														"src": "1254:6:10",
														"type": ""
													}
												],
												"src": "1202:99:10"
											},
											{
												"body": {
													"nativeSrc": "1335:152:10",
													"nodeType": "YulBlock",
													"src": "1335:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:10"
																},
																"nativeSrc": "1345:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:10"
															},
															"nativeSrc": "1345:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:10"
																},
																"nativeSrc": "1442:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:10"
															},
															"nativeSrc": "1442:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:10"
																},
																"nativeSrc": "1466:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:10"
															},
															"nativeSrc": "1466:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:10"
											},
											{
												"body": {
													"nativeSrc": "1521:152:10",
													"nodeType": "YulBlock",
													"src": "1521:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:10"
																},
																"nativeSrc": "1531:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:10"
															},
															"nativeSrc": "1531:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:10"
																},
																"nativeSrc": "1628:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:10"
															},
															"nativeSrc": "1628:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:10"
																},
																"nativeSrc": "1652:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:10"
															},
															"nativeSrc": "1652:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:10"
											},
											{
												"body": {
													"nativeSrc": "1730:269:10",
													"nodeType": "YulBlock",
													"src": "1730:269:10",
													"statements": [
														{
															"nativeSrc": "1740:22:10",
															"nodeType": "YulAssignment",
															"src": "1740:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:10"
																},
																"nativeSrc": "1750:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:10"
																}
															]
														},
														{
															"nativeSrc": "1771:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:10"
																},
																"nativeSrc": "1797:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:10",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:10",
																"nodeType": "YulBlock",
																"src": "1848:51:10",
																"statements": [
																	{
																		"nativeSrc": "1862:27:10",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:10",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:10"
																			},
																			"nativeSrc": "1872:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:10"
																},
																"nativeSrc": "1821:26:10",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:10"
															},
															"nativeSrc": "1818:81:10",
															"nodeType": "YulIf",
															"src": "1818:81:10"
														},
														{
															"body": {
																"nativeSrc": "1951:42:10",
																"nodeType": "YulBlock",
																"src": "1951:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:10"
																			},
																			"nativeSrc": "1965:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:10"
																		},
																		"nativeSrc": "1965:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:10"
																		},
																		"nativeSrc": "1935:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:10"
																},
																"nativeSrc": "1912:38:10",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:10"
															},
															"nativeSrc": "1909:84:10",
															"nodeType": "YulIf",
															"src": "1909:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:10",
														"nodeType": "YulTypedName",
														"src": "1714:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:10",
														"nodeType": "YulTypedName",
														"src": "1723:6:10",
														"type": ""
													}
												],
												"src": "1679:320:10"
											},
											{
												"body": {
													"nativeSrc": "2059:87:10",
													"nodeType": "YulBlock",
													"src": "2059:87:10",
													"statements": [
														{
															"nativeSrc": "2069:11:10",
															"nodeType": "YulAssignment",
															"src": "2069:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:10",
																"nodeType": "YulIdentifier",
																"src": "2077:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:10"
																},
																"nativeSrc": "2090:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:10"
															},
															"nativeSrc": "2090:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:10"
														},
														{
															"nativeSrc": "2113:26:10",
															"nodeType": "YulAssignment",
															"src": "2113:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:10"
																},
																"nativeSrc": "2121:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:10",
														"nodeType": "YulTypedName",
														"src": "2046:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:10",
														"nodeType": "YulTypedName",
														"src": "2054:4:10",
														"type": ""
													}
												],
												"src": "2005:141:10"
											},
											{
												"body": {
													"nativeSrc": "2196:49:10",
													"nodeType": "YulBlock",
													"src": "2196:49:10",
													"statements": [
														{
															"nativeSrc": "2206:33:10",
															"nodeType": "YulAssignment",
															"src": "2206:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:10"
																		},
																		"nativeSrc": "2220:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:10"
																},
																"nativeSrc": "2216:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:10",
														"nodeType": "YulTypedName",
														"src": "2179:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:10",
														"nodeType": "YulTypedName",
														"src": "2189:6:10",
														"type": ""
													}
												],
												"src": "2152:93:10"
											},
											{
												"body": {
													"nativeSrc": "2304:54:10",
													"nodeType": "YulBlock",
													"src": "2304:54:10",
													"statements": [
														{
															"nativeSrc": "2314:37:10",
															"nodeType": "YulAssignment",
															"src": "2314:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:10"
																},
																"nativeSrc": "2335:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:10",
														"nodeType": "YulTypedName",
														"src": "2279:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:10",
														"nodeType": "YulTypedName",
														"src": "2285:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:10",
														"nodeType": "YulTypedName",
														"src": "2295:8:10",
														"type": ""
													}
												],
												"src": "2251:107:10"
											},
											{
												"body": {
													"nativeSrc": "2440:317:10",
													"nodeType": "YulBlock",
													"src": "2440:317:10",
													"statements": [
														{
															"nativeSrc": "2450:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:10"
																},
																"nativeSrc": "2467:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:10",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:10",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:10"
																},
																"nativeSrc": "2506:97:10",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:10",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:10",
															"nodeType": "YulAssignment",
															"src": "2612:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:10"
																},
																"nativeSrc": "2624:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:10"
																}
															]
														},
														{
															"nativeSrc": "2672:30:10",
															"nodeType": "YulAssignment",
															"src": "2672:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:10"
																		},
																		"nativeSrc": "2692:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:10"
																},
																"nativeSrc": "2681:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:10"
																}
															]
														},
														{
															"nativeSrc": "2711:40:10",
															"nodeType": "YulAssignment",
															"src": "2711:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:10"
																		},
																		"nativeSrc": "2731:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:10"
																},
																"nativeSrc": "2721:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:10",
														"nodeType": "YulTypedName",
														"src": "2401:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:10",
														"nodeType": "YulTypedName",
														"src": "2408:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:10",
														"nodeType": "YulTypedName",
														"src": "2420:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:10",
														"nodeType": "YulTypedName",
														"src": "2433:6:10",
														"type": ""
													}
												],
												"src": "2364:393:10"
											},
											{
												"body": {
													"nativeSrc": "2808:32:10",
													"nodeType": "YulBlock",
													"src": "2808:32:10",
													"statements": [
														{
															"nativeSrc": "2818:16:10",
															"nodeType": "YulAssignment",
															"src": "2818:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:10",
																"nodeType": "YulIdentifier",
																"src": "2829:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:10",
														"nodeType": "YulTypedName",
														"src": "2790:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:10",
														"nodeType": "YulTypedName",
														"src": "2800:7:10",
														"type": ""
													}
												],
												"src": "2763:77:10"
											},
											{
												"body": {
													"nativeSrc": "2878:28:10",
													"nodeType": "YulBlock",
													"src": "2878:28:10",
													"statements": [
														{
															"nativeSrc": "2888:12:10",
															"nodeType": "YulAssignment",
															"src": "2888:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:10",
																"nodeType": "YulIdentifier",
																"src": "2895:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:10",
														"nodeType": "YulTypedName",
														"src": "2864:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:10",
														"nodeType": "YulTypedName",
														"src": "2874:3:10",
														"type": ""
													}
												],
												"src": "2846:60:10"
											},
											{
												"body": {
													"nativeSrc": "2972:82:10",
													"nodeType": "YulBlock",
													"src": "2972:82:10",
													"statements": [
														{
															"nativeSrc": "2982:66:10",
															"nodeType": "YulAssignment",
															"src": "2982:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:10"
																				},
																				"nativeSrc": "3022:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:10"
																		},
																		"nativeSrc": "3013:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:10"
																},
																"nativeSrc": "2995:53:10",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:10",
														"nodeType": "YulTypedName",
														"src": "2952:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:10",
														"nodeType": "YulTypedName",
														"src": "2962:9:10",
														"type": ""
													}
												],
												"src": "2912:142:10"
											},
											{
												"body": {
													"nativeSrc": "3107:28:10",
													"nodeType": "YulBlock",
													"src": "3107:28:10",
													"statements": [
														{
															"nativeSrc": "3117:12:10",
															"nodeType": "YulAssignment",
															"src": "3117:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:10",
																"nodeType": "YulIdentifier",
																"src": "3124:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:10",
														"nodeType": "YulTypedName",
														"src": "3093:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:10",
														"nodeType": "YulTypedName",
														"src": "3103:3:10",
														"type": ""
													}
												],
												"src": "3060:75:10"
											},
											{
												"body": {
													"nativeSrc": "3217:193:10",
													"nodeType": "YulBlock",
													"src": "3217:193:10",
													"statements": [
														{
															"nativeSrc": "3227:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:10"
																},
																"nativeSrc": "3251:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:10",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:10"
																				},
																				"nativeSrc": "3340:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:10"
																				},
																				"nativeSrc": "3361:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:10"
																		},
																		"nativeSrc": "3312:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:10"
																},
																"nativeSrc": "3299:105:10",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:10"
															},
															"nativeSrc": "3299:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:10",
														"nodeType": "YulTypedName",
														"src": "3194:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:10",
														"nodeType": "YulTypedName",
														"src": "3200:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:10",
														"nodeType": "YulTypedName",
														"src": "3208:7:10",
														"type": ""
													}
												],
												"src": "3141:269:10"
											},
											{
												"body": {
													"nativeSrc": "3465:24:10",
													"nodeType": "YulBlock",
													"src": "3465:24:10",
													"statements": [
														{
															"nativeSrc": "3475:8:10",
															"nodeType": "YulAssignment",
															"src": "3475:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:10",
																"nodeType": "YulLiteral",
																"src": "3482:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:10",
														"nodeType": "YulTypedName",
														"src": "3461:3:10",
														"type": ""
													}
												],
												"src": "3416:73:10"
											},
											{
												"body": {
													"nativeSrc": "3548:136:10",
													"nodeType": "YulBlock",
													"src": "3548:136:10",
													"statements": [
														{
															"nativeSrc": "3558:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:10"
																},
																"nativeSrc": "3572:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:10"
																},
																"nativeSrc": "3613:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:10"
															},
															"nativeSrc": "3613:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:10",
														"nodeType": "YulTypedName",
														"src": "3534:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:10",
														"nodeType": "YulTypedName",
														"src": "3540:6:10",
														"type": ""
													}
												],
												"src": "3495:189:10"
											},
											{
												"body": {
													"nativeSrc": "3740:136:10",
													"nodeType": "YulBlock",
													"src": "3740:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:10",
																"nodeType": "YulBlock",
																"src": "3807:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:10"
																			},
																			"nativeSrc": "3821:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:10"
																		},
																		"nativeSrc": "3821:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:10"
																},
																"nativeSrc": "3757:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:10"
															},
															"nativeSrc": "3750:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:10",
																"nodeType": "YulBlock",
																"src": "3772:26:10",
																"statements": [
																	{
																		"nativeSrc": "3774:22:10",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:10"
																			},
																			"nativeSrc": "3783:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:10",
																"nodeType": "YulBlock",
																"src": "3754:2:10",
																"statements": []
															},
															"src": "3750:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:10",
														"nodeType": "YulTypedName",
														"src": "3728:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:10",
														"nodeType": "YulTypedName",
														"src": "3735:3:10",
														"type": ""
													}
												],
												"src": "3690:186:10"
											},
											{
												"body": {
													"nativeSrc": "3961:464:10",
													"nodeType": "YulBlock",
													"src": "3961:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:10",
																"nodeType": "YulBlock",
																"src": "3987:431:10",
																"statements": [
																	{
																		"nativeSrc": "4001:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:10"
																			},
																			"nativeSrc": "4017:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:10",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:10"
																					},
																					"nativeSrc": "4101:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:10"
																			},
																			"nativeSrc": "4087:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:10",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:10",
																			"nodeType": "YulBlock",
																			"src": "4288:27:10",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:10",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:10",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:10"
																			},
																			"nativeSrc": "4269:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:10"
																		},
																		"nativeSrc": "4266:49:10",
																		"nodeType": "YulIf",
																		"src": "4266:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:10"
																							},
																							"nativeSrc": "4384:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:10"
																					},
																					"nativeSrc": "4370:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:10"
																			},
																			"nativeSrc": "4328:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:10"
																		},
																		"nativeSrc": "4328:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:10"
																},
																"nativeSrc": "3975:11:10",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:10"
															},
															"nativeSrc": "3972:446:10",
															"nodeType": "YulIf",
															"src": "3972:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:10",
														"nodeType": "YulTypedName",
														"src": "3937:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:10",
														"nodeType": "YulTypedName",
														"src": "3944:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:10",
														"nodeType": "YulTypedName",
														"src": "3949:10:10",
														"type": ""
													}
												],
												"src": "3882:543:10"
											},
											{
												"body": {
													"nativeSrc": "4494:54:10",
													"nodeType": "YulBlock",
													"src": "4494:54:10",
													"statements": [
														{
															"nativeSrc": "4504:37:10",
															"nodeType": "YulAssignment",
															"src": "4504:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:10"
																},
																"nativeSrc": "4525:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:10",
														"nodeType": "YulTypedName",
														"src": "4469:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:10",
														"nodeType": "YulTypedName",
														"src": "4475:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:10",
														"nodeType": "YulTypedName",
														"src": "4485:8:10",
														"type": ""
													}
												],
												"src": "4431:117:10"
											},
											{
												"body": {
													"nativeSrc": "4605:118:10",
													"nodeType": "YulBlock",
													"src": "4605:118:10",
													"statements": [
														{
															"nativeSrc": "4615:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:10"
																				},
																				"nativeSrc": "4660:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:10"
																				},
																				"nativeSrc": "4675:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:10"
																		},
																		"nativeSrc": "4631:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:10"
																},
																"nativeSrc": "4627:56:10",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:10",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:10",
															"nodeType": "YulAssignment",
															"src": "4692:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:10"
																},
																"nativeSrc": "4702:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:10",
														"nodeType": "YulTypedName",
														"src": "4582:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:10",
														"nodeType": "YulTypedName",
														"src": "4588:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:10",
														"nodeType": "YulTypedName",
														"src": "4598:6:10",
														"type": ""
													}
												],
												"src": "4554:169:10"
											},
											{
												"body": {
													"nativeSrc": "4809:214:10",
													"nodeType": "YulBlock",
													"src": "4809:214:10",
													"statements": [
														{
															"nativeSrc": "4942:37:10",
															"nodeType": "YulAssignment",
															"src": "4942:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:10"
																},
																"nativeSrc": "4950:29:10",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:10"
																}
															]
														},
														{
															"nativeSrc": "4988:29:10",
															"nodeType": "YulAssignment",
															"src": "4988:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:10"
																		},
																		"nativeSrc": "5005:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:10"
																},
																"nativeSrc": "4996:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:10",
														"nodeType": "YulTypedName",
														"src": "4790:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:10",
														"nodeType": "YulTypedName",
														"src": "4796:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:10",
														"nodeType": "YulTypedName",
														"src": "4804:4:10",
														"type": ""
													}
												],
												"src": "4728:295:10"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:10",
													"nodeType": "YulBlock",
													"src": "5120:1303:10",
													"statements": [
														{
															"nativeSrc": "5131:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:10"
																},
																"nativeSrc": "5145:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:10",
																"nodeType": "YulBlock",
																"src": "5267:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:10"
																			},
																			"nativeSrc": "5269:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:10"
																		},
																		"nativeSrc": "5269:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:10",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:10"
																},
																"nativeSrc": "5236:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:10"
															},
															"nativeSrc": "5233:56:10",
															"nodeType": "YulIf",
															"src": "5233:56:10"
														},
														{
															"nativeSrc": "5299:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:10"
																		},
																		"nativeSrc": "5339:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:10"
																},
																"nativeSrc": "5313:38:10",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:10"
																},
																"nativeSrc": "5398:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:10"
															},
															"nativeSrc": "5398:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:10"
														},
														{
															"nativeSrc": "5475:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:10",
																"nodeType": "YulLiteral",
																"src": "5492:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:10",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:10",
															"nodeType": "YulAssignment",
															"src": "5503:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:10",
																"nodeType": "YulLiteral",
																"src": "5516:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:10",
																		"nodeType": "YulBlock",
																		"src": "5567:611:10",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:10",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:10"
																							},
																							"nativeSrc": "5608:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:10"
																					},
																					"nativeSrc": "5596:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:10",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:10"
																					},
																					"nativeSrc": "5646:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:10",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:10",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:10",
																					"nodeType": "YulBlock",
																					"src": "5764:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:10"
																												},
																												"nativeSrc": "5803:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:10"
																										},
																										"nativeSrc": "5797:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:10"
																								},
																								"nativeSrc": "5782:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:10"
																							},
																							"nativeSrc": "5782:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:10"
																						},
																						{
																							"nativeSrc": "5841:24:10",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:10",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:10"
																								},
																								"nativeSrc": "5851:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:10",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:10",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:10"
																								},
																								"nativeSrc": "5895:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:10"
																					},
																					"nativeSrc": "5727:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:10"
																				},
																				"nativeSrc": "5719:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:10",
																					"nodeType": "YulBlock",
																					"src": "5742:21:10",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:10",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:10",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:10"
																								},
																								"nativeSrc": "5749:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:10",
																					"nodeType": "YulBlock",
																					"src": "5723:3:10",
																					"statements": []
																				},
																				"src": "5719:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:10",
																					"nodeType": "YulBlock",
																					"src": "5963:156:10",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:10"
																										},
																										"nativeSrc": "6004:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:10"
																								},
																								"nativeSrc": "5998:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:10",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:10",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:10"
																												},
																												"nativeSrc": "6086:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:10"
																										},
																										"nativeSrc": "6056:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:10"
																								},
																								"nativeSrc": "6041:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:10"
																							},
																							"nativeSrc": "6041:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:10"
																					},
																					"nativeSrc": "5943:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:10"
																				},
																				"nativeSrc": "5940:179:10",
																				"nodeType": "YulIf",
																				"src": "5940:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:10",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:10"
																									},
																									"nativeSrc": "6149:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:10",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:10"
																							},
																							"nativeSrc": "6145:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:10"
																					},
																					"nativeSrc": "6132:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:10"
																				},
																				"nativeSrc": "6132:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:10"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:10",
																	"nodeType": "YulCase",
																	"src": "5560:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:10",
																		"nodeType": "YulBlock",
																		"src": "6195:222:10",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:10",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:10",
																					"nodeType": "YulBlock",
																					"src": "6246:67:10",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:10",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:10"
																										},
																										"nativeSrc": "6279:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:10"
																								},
																								"nativeSrc": "6273:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:10"
																				},
																				"nativeSrc": "6236:77:10",
																				"nodeType": "YulIf",
																				"src": "6236:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:10"
																							},
																							"nativeSrc": "6339:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:10"
																					},
																					"nativeSrc": "6326:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:10"
																				},
																				"nativeSrc": "6326:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:10"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:10",
																	"nodeType": "YulCase",
																	"src": "6187:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:10"
																},
																"nativeSrc": "5537:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:10"
															},
															"nativeSrc": "5530:887:10",
															"nodeType": "YulSwitch",
															"src": "5530:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:10",
														"nodeType": "YulTypedName",
														"src": "5109:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:10",
														"nodeType": "YulTypedName",
														"src": "5115:3:10",
														"type": ""
													}
												],
												"src": "5028:1395:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611ce5380380611ce5833981810160405281019061003191906102b5565b6040518060400160405280601981526020017f426c6f636b636861696e20556e69666563616620546f6b656e000000000000008152506040518060400160405280600381526020017f425554000000000000000000000000000000000000000000000000000000000081525081600390816100ac919061051a565b5080600490816100bc919061051a565b5050506100ef7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826100f660201b60201c565b50506105e9565b5f61010783836101ec60201b60201c565b6101e257600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061017f61025060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101e6565b5f90505b92915050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102848261025b565b9050919050565b6102948161027a565b811461029e575f80fd5b50565b5f815190506102af8161028b565b92915050565b5f602082840312156102ca576102c9610257565b5b5f6102d7848285016102a1565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061035b57607f821691505b60208210810361036e5761036d610317565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103d07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610395565b6103da8683610395565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61041e610419610414846103f2565b6103fb565b6103f2565b9050919050565b5f819050919050565b61043783610404565b61044b61044382610425565b8484546103a1565b825550505050565b5f90565b61045f610453565b61046a81848461042e565b505050565b5b8181101561048d576104825f82610457565b600181019050610470565b5050565b601f8211156104d2576104a381610374565b6104ac84610386565b810160208510156104bb578190505b6104cf6104c785610386565b83018261046f565b50505b505050565b5f82821c905092915050565b5f6104f25f19846008026104d7565b1980831691505092915050565b5f61050a83836104e3565b9150826002028217905092915050565b610523826102e0565b67ffffffffffffffff81111561053c5761053b6102ea565b5b6105468254610344565b610551828285610491565b5f60209050601f831160018114610582575f8415610570578287015190505b61057a85826104ff565b8655506105e1565b601f19841661059086610374565b5f5b828110156105b757848901518255600182019150602085019450602081019050610592565b868310156105d457848901516105d0601f8916826104e3565b8355505b6001600288020188555050505b505050505050565b6116ef806105f65f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c806340c10f19116100a0578063a217fddf1161006f578063a217fddf14610304578063a9059cbb14610322578063d539139314610352578063d547741f14610370578063dd62ed3e1461038c57610114565b806340c10f191461026a57806370a082311461028657806391d14854146102b657806395d89b41146102e657610114565b806323b872dd116100e757806323b872dd146101b4578063248a9ca3146101e45780632f2ff15d14610214578063313ce5671461023057806336568abe1461024e57610114565b806301ffc9a71461011857806306fdde0314610148578063095ea7b31461016657806318160ddd14610196575b5f80fd5b610132600480360381019061012d919061117e565b6103bc565b60405161013f91906111c3565b60405180910390f35b610150610435565b60405161015d919061124c565b60405180910390f35b610180600480360381019061017b91906112f9565b6104c5565b60405161018d91906111c3565b60405180910390f35b61019e6104e7565b6040516101ab9190611346565b60405180910390f35b6101ce60048036038101906101c9919061135f565b6104f0565b6040516101db91906111c3565b60405180910390f35b6101fe60048036038101906101f991906113e2565b61051e565b60405161020b919061141c565b60405180910390f35b61022e60048036038101906102299190611435565b61053b565b005b61023861055d565b604051610245919061148e565b60405180910390f35b61026860048036038101906102639190611435565b610565565b005b610284600480360381019061027f91906112f9565b6105e0565b005b6102a0600480360381019061029b91906114a7565b610657565b6040516102ad9190611346565b60405180910390f35b6102d060048036038101906102cb9190611435565b61069c565b6040516102dd91906111c3565b60405180910390f35b6102ee610700565b6040516102fb919061124c565b60405180910390f35b61030c610790565b604051610319919061141c565b60405180910390f35b61033c600480360381019061033791906112f9565b610796565b60405161034991906111c3565b60405180910390f35b61035a6107b8565b604051610367919061141c565b60405180910390f35b61038a60048036038101906103859190611435565b6107dc565b005b6103a660048036038101906103a191906114d2565b6107fe565b6040516103b39190611346565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042e575061042d82610880565b5b9050919050565b6060600380546104449061153d565b80601f01602080910402602001604051908101604052809291908181526020018280546104709061153d565b80156104bb5780601f10610492576101008083540402835291602001916104bb565b820191905f5260205f20905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b5f806104cf6108e9565b90506104dc8185856108f0565b600191505092915050565b5f600254905090565b5f806104fa6108e9565b9050610507858285610902565b610512858585610995565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105448261051e565b61054d81610a85565b6105578383610a99565b50505050565b5f6012905090565b61056d6108e9565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105db8282610b83565b505050565b61060a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63361069c565b610649576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610640906115b7565b60405180910390fd5b6106538282610c6d565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461070f9061153d565b80601f016020809104026020016040519081016040528092919081815260200182805461073b9061153d565b80156107865780601f1061075d57610100808354040283529160200191610786565b820191905f5260205f20905b81548152906001019060200180831161076957829003601f168201915b5050505050905090565b5f801b81565b5f806107a06108e9565b90506107ad818585610995565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107e58261051e565b6107ee81610a85565b6107f88383610b83565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6108fd8383836001610cec565b505050565b5f61090d84846107fe565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561098f5781811015610980578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610977939291906115e4565b60405180910390fd5b61098e84848484035f610cec565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a05575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109fc9190611619565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a75575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a6c9190611619565b60405180910390fd5b610a80838383610ebb565b505050565b610a9681610a916108e9565b6110d4565b50565b5f610aa4838361069c565b610b7957600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610b166108e9565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b7d565b5f90505b92915050565b5f610b8e838361069c565b15610c63575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610c006108e9565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c67565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cdd575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610cd49190611619565b60405180910390fd5b610ce85f8383610ebb565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d5c575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d539190611619565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dcc575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610dc39190611619565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610eb5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610eac9190611346565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f0b578060025f828254610eff919061165f565b92505081905550610fd9565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f94578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f8b939291906115e4565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611020578060025f828254039250508190555061106a565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110c79190611346565b60405180910390a3505050565b6110de828261069c565b6111215780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611118929190611692565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61115d81611129565b8114611167575f80fd5b50565b5f8135905061117881611154565b92915050565b5f6020828403121561119357611192611125565b5b5f6111a08482850161116a565b91505092915050565b5f8115159050919050565b6111bd816111a9565b82525050565b5f6020820190506111d65f8301846111b4565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61121e826111dc565b61122881856111e6565b93506112388185602086016111f6565b61124181611204565b840191505092915050565b5f6020820190508181035f8301526112648184611214565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112958261126c565b9050919050565b6112a58161128b565b81146112af575f80fd5b50565b5f813590506112c08161129c565b92915050565b5f819050919050565b6112d8816112c6565b81146112e2575f80fd5b50565b5f813590506112f3816112cf565b92915050565b5f806040838503121561130f5761130e611125565b5b5f61131c858286016112b2565b925050602061132d858286016112e5565b9150509250929050565b611340816112c6565b82525050565b5f6020820190506113595f830184611337565b92915050565b5f805f6060848603121561137657611375611125565b5b5f611383868287016112b2565b9350506020611394868287016112b2565b92505060406113a5868287016112e5565b9150509250925092565b5f819050919050565b6113c1816113af565b81146113cb575f80fd5b50565b5f813590506113dc816113b8565b92915050565b5f602082840312156113f7576113f6611125565b5b5f611404848285016113ce565b91505092915050565b611416816113af565b82525050565b5f60208201905061142f5f83018461140d565b92915050565b5f806040838503121561144b5761144a611125565b5b5f611458858286016113ce565b9250506020611469858286016112b2565b9150509250929050565b5f60ff82169050919050565b61148881611473565b82525050565b5f6020820190506114a15f83018461147f565b92915050565b5f602082840312156114bc576114bb611125565b5b5f6114c9848285016112b2565b91505092915050565b5f80604083850312156114e8576114e7611125565b5b5f6114f5858286016112b2565b9250506020611506858286016112b2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061155457607f821691505b60208210810361156757611566611510565b5b50919050565b7f4f6e6c79206d696e7465720000000000000000000000000000000000000000005f82015250565b5f6115a1600b836111e6565b91506115ac8261156d565b602082019050919050565b5f6020820190508181035f8301526115ce81611595565b9050919050565b6115de8161128b565b82525050565b5f6060820190506115f75f8301866115d5565b6116046020830185611337565b6116116040830184611337565b949350505050565b5f60208201905061162c5f8301846115d5565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611669826112c6565b9150611674836112c6565b925082820190508082111561168c5761168b611632565b5b92915050565b5f6040820190506116a55f8301856115d5565b6116b2602083018461140d565b939250505056fea2646970667358221220891e769c5a02c02a3d3fb4a7f016a9b9b38fc6cd20884cf992dd1d0dca8b720d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1CE5 CODESIZE SUB DUP1 PUSH2 0x1CE5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426C6F636B636861696E20556E69666563616620546F6B656E00000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4255540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x51A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x51A JUMP JUMPDEST POP POP POP PUSH2 0xEF PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0xF6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5E9 JUMP JUMPDEST PUSH0 PUSH2 0x107 DUP4 DUP4 PUSH2 0x1EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1E2 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x17F PUSH2 0x250 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1E6 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x284 DUP3 PUSH2 0x25B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x294 DUP2 PUSH2 0x27A JUMP JUMPDEST DUP2 EQ PUSH2 0x29E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AF DUP2 PUSH2 0x28B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CA JUMPI PUSH2 0x2C9 PUSH2 0x257 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D7 DUP5 DUP3 DUP6 ADD PUSH2 0x2A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x35B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x36E JUMPI PUSH2 0x36D PUSH2 0x317 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x3D0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x395 JUMP JUMPDEST PUSH2 0x3DA DUP7 DUP4 PUSH2 0x395 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x41E PUSH2 0x419 PUSH2 0x414 DUP5 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437 DUP4 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x44B PUSH2 0x443 DUP3 PUSH2 0x425 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3A1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x45F PUSH2 0x453 JUMP JUMPDEST PUSH2 0x46A DUP2 DUP5 DUP5 PUSH2 0x42E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x48D JUMPI PUSH2 0x482 PUSH0 DUP3 PUSH2 0x457 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x470 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4D2 JUMPI PUSH2 0x4A3 DUP2 PUSH2 0x374 JUMP JUMPDEST PUSH2 0x4AC DUP5 PUSH2 0x386 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4BB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4CF PUSH2 0x4C7 DUP6 PUSH2 0x386 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x46F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4F2 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4D7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x50A DUP4 DUP4 PUSH2 0x4E3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x523 DUP3 PUSH2 0x2E0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x2EA JUMP JUMPDEST JUMPDEST PUSH2 0x546 DUP3 SLOAD PUSH2 0x344 JUMP JUMPDEST PUSH2 0x551 DUP3 DUP3 DUP6 PUSH2 0x491 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x582 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x570 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x57A DUP6 DUP3 PUSH2 0x4FF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x590 DUP7 PUSH2 0x374 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5B7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x592 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5D4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5D0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4E3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16EF DUP1 PUSH2 0x5F6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x117E JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0x880 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x153D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x153D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4CF PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP2 DUP6 DUP6 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4FA PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP6 DUP3 DUP6 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x512 DUP6 DUP6 DUP6 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x544 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x557 DUP4 DUP4 PUSH2 0xA99 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH2 0x8E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 DUP3 PUSH2 0xB83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x60A PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x69C JUMP JUMPDEST PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP1 PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x653 DUP3 DUP3 PUSH2 0xC6D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x70F SWAP1 PUSH2 0x153D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x73B SWAP1 PUSH2 0x153D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x786 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x75D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x786 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x769 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7A0 PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AD DUP2 DUP6 DUP6 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7E5 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x7EE DUP2 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x7F8 DUP4 DUP4 PUSH2 0xB83 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8FD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x90D DUP5 DUP5 PUSH2 0x7FE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x98F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x980 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCEC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA05 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA75 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6C SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA80 DUP4 DUP4 DUP4 PUSH2 0xEBB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA96 DUP2 PUSH2 0xA91 PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x10D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xAA4 DUP4 DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0xB79 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB16 PUSH2 0x8E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB7D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB8E DUP4 DUP4 PUSH2 0x69C JUMP JUMPDEST ISZERO PUSH2 0xC63 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC00 PUSH2 0x8E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC67 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE8 PUSH0 DUP4 DUP4 PUSH2 0xEBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC3 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xEB5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEAC SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF0B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x165F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFD9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF94 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1020 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x106A JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10DE DUP3 DUP3 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1121 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1118 SWAP3 SWAP2 SWAP1 PUSH2 0x1692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115D DUP2 PUSH2 0x1129 JUMP JUMPDEST DUP2 EQ PUSH2 0x1167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1178 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1192 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11A0 DUP5 DUP3 DUP6 ADD PUSH2 0x116A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BD DUP2 PUSH2 0x11A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x11B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x121E DUP3 PUSH2 0x11DC JUMP JUMPDEST PUSH2 0x1228 DUP2 DUP6 PUSH2 0x11E6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1238 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x1241 DUP2 PUSH2 0x1204 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1264 DUP2 DUP5 PUSH2 0x1214 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1295 DUP3 PUSH2 0x126C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A5 DUP2 PUSH2 0x128B JUMP JUMPDEST DUP2 EQ PUSH2 0x12AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12C0 DUP2 PUSH2 0x129C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D8 DUP2 PUSH2 0x12C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x12E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F3 DUP2 PUSH2 0x12CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130F JUMPI PUSH2 0x130E PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x131C DUP6 DUP3 DUP7 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x132D DUP6 DUP3 DUP7 ADD PUSH2 0x12E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1340 DUP2 PUSH2 0x12C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1359 PUSH0 DUP4 ADD DUP5 PUSH2 0x1337 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1376 JUMPI PUSH2 0x1375 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1383 DUP7 DUP3 DUP8 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1394 DUP7 DUP3 DUP8 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13A5 DUP7 DUP3 DUP8 ADD PUSH2 0x12E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C1 DUP2 PUSH2 0x13AF JUMP JUMPDEST DUP2 EQ PUSH2 0x13CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DC DUP2 PUSH2 0x13B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F7 JUMPI PUSH2 0x13F6 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1404 DUP5 DUP3 DUP6 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1416 DUP2 PUSH2 0x13AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142F PUSH0 DUP4 ADD DUP5 PUSH2 0x140D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144B JUMPI PUSH2 0x144A PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1458 DUP6 DUP3 DUP7 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1469 DUP6 DUP3 DUP7 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1488 DUP2 PUSH2 0x1473 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x147F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14BC JUMPI PUSH2 0x14BB PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14C9 DUP5 DUP3 DUP6 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E8 JUMPI PUSH2 0x14E7 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14F5 DUP6 DUP3 DUP7 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1506 DUP6 DUP3 DUP7 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1554 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1567 JUMPI PUSH2 0x1566 PUSH2 0x1510 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206D696E746572000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15A1 PUSH1 0xB DUP4 PUSH2 0x11E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AC DUP3 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15CE DUP2 PUSH2 0x1595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DE DUP2 PUSH2 0x128B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15F7 PUSH0 DUP4 ADD DUP7 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x1604 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x1611 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1337 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162C PUSH0 DUP4 ADD DUP5 PUSH2 0x15D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1669 DUP3 PUSH2 0x12C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1674 DUP4 PUSH2 0x12C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x168C JUMPI PUSH2 0x168B PUSH2 0x1632 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16A5 PUSH0 DUP4 ADD DUP6 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x16B2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x140D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0x1E PUSH23 0x9C5A02C02A3D3FB4A7F016A9B9B38FC6CD20884CF992DD SAR 0xD 0xCA DUP12 PUSH19 0xD64736F6C634300081A003300000000000000 ",
							"sourceMap": "293:388:0:-:0;;;407:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;487:31:0::1;376:24;511:6;487:10;;;:31;;:::i;:::-;;407:118:::0;293:388;;6179:316:1;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;293:388:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_80": {
									"entryPoint": 1936,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_12": {
									"entryPoint": 1976,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1032": {
									"entryPoint": 3308,
									"id": 1032,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_972": {
									"entryPoint": 2288,
									"id": 972,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkRole_144": {
									"entryPoint": 2693,
									"id": 144,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_165": {
									"entryPoint": 4308,
									"id": 165,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_307": {
									"entryPoint": 2713,
									"id": 307,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_921": {
									"entryPoint": 3181,
									"id": 921,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1197": {
									"entryPoint": 2281,
									"id": 1197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_345": {
									"entryPoint": 2947,
									"id": 345,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1080": {
									"entryPoint": 2306,
									"id": 1080,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_811": {
									"entryPoint": 2453,
									"id": 811,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_888": {
									"entryPoint": 3771,
									"id": 888,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_708": {
									"entryPoint": 2046,
									"id": 708,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_732": {
									"entryPoint": 1221,
									"id": 732,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_667": {
									"entryPoint": 1623,
									"id": 667,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_645": {
									"entryPoint": 1373,
									"id": 645,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_179": {
									"entryPoint": 1310,
									"id": 179,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_198": {
									"entryPoint": 1339,
									"id": 198,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_131": {
									"entryPoint": 1692,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_49": {
									"entryPoint": 1504,
									"id": 49,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_627": {
									"entryPoint": 1077,
									"id": 627,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_240": {
									"entryPoint": 1381,
									"id": 240,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_217": {
									"entryPoint": 2012,
									"id": 217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_113": {
									"entryPoint": 956,
									"id": 113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1238": {
									"entryPoint": 2176,
									"id": 1238,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_636": {
									"entryPoint": 1792,
									"id": 636,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_654": {
									"entryPoint": 1255,
									"id": 654,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_764": {
									"entryPoint": 1264,
									"id": 764,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_691": {
									"entryPoint": 1942,
									"id": 691,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 5778,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5604,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5392,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4389,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6": {
									"entryPoint": 5485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10835:10",
										"nodeType": "YulBlock",
										"src": "0:10835:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "378:105:10",
													"nodeType": "YulBlock",
													"src": "378:105:10",
													"statements": [
														{
															"nativeSrc": "388:89:10",
															"nodeType": "YulAssignment",
															"src": "388:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:10",
																		"nodeType": "YulLiteral",
																		"src": "410:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:10"
																},
																"nativeSrc": "399:78:10",
																"nodeType": "YulFunctionCall",
																"src": "399:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:10",
														"nodeType": "YulTypedName",
														"src": "360:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:10",
														"nodeType": "YulTypedName",
														"src": "370:7:10",
														"type": ""
													}
												],
												"src": "334:149:10"
											},
											{
												"body": {
													"nativeSrc": "531:78:10",
													"nodeType": "YulBlock",
													"src": "531:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:10",
																"nodeType": "YulBlock",
																"src": "587:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:10",
																					"nodeType": "YulLiteral",
																					"src": "596:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:10",
																					"nodeType": "YulLiteral",
																					"src": "599:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:10"
																			},
																			"nativeSrc": "589:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:10"
																		},
																		"nativeSrc": "589:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:10"
																				},
																				"nativeSrc": "561:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:10"
																		},
																		"nativeSrc": "551:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:10"
																},
																"nativeSrc": "544:42:10",
																"nodeType": "YulFunctionCall",
																"src": "544:42:10"
															},
															"nativeSrc": "541:62:10",
															"nodeType": "YulIf",
															"src": "541:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:10",
														"nodeType": "YulTypedName",
														"src": "524:5:10",
														"type": ""
													}
												],
												"src": "489:120:10"
											},
											{
												"body": {
													"nativeSrc": "666:86:10",
													"nodeType": "YulBlock",
													"src": "666:86:10",
													"statements": [
														{
															"nativeSrc": "676:29:10",
															"nodeType": "YulAssignment",
															"src": "676:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:10"
																},
																"nativeSrc": "685:20:10",
																"nodeType": "YulFunctionCall",
																"src": "685:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:10"
																},
																"nativeSrc": "714:32:10",
																"nodeType": "YulFunctionCall",
																"src": "714:32:10"
															},
															"nativeSrc": "714:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:10",
														"nodeType": "YulTypedName",
														"src": "644:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:10",
														"nodeType": "YulTypedName",
														"src": "652:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:10",
														"nodeType": "YulTypedName",
														"src": "660:5:10",
														"type": ""
													}
												],
												"src": "615:137:10"
											},
											{
												"body": {
													"nativeSrc": "823:262:10",
													"nodeType": "YulBlock",
													"src": "823:262:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:10",
																"nodeType": "YulBlock",
																"src": "869:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:10"
																			},
																			"nativeSrc": "871:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:10"
																		},
																		"nativeSrc": "871:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:10"
																		},
																		"nativeSrc": "840:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:10",
																		"nodeType": "YulLiteral",
																		"src": "865:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:10"
																},
																"nativeSrc": "836:32:10",
																"nodeType": "YulFunctionCall",
																"src": "836:32:10"
															},
															"nativeSrc": "833:119:10",
															"nodeType": "YulIf",
															"src": "833:119:10"
														},
														{
															"nativeSrc": "962:116:10",
															"nodeType": "YulBlock",
															"src": "962:116:10",
															"statements": [
																{
																	"nativeSrc": "977:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:10",
																		"nodeType": "YulLiteral",
																		"src": "991:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:10",
																			"nodeType": "YulTypedName",
																			"src": "981:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:10",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:10"
																				},
																				"nativeSrc": "1036:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:10",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:10"
																		},
																		"nativeSrc": "1016:52:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:10",
														"nodeType": "YulTypedName",
														"src": "793:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:10",
														"nodeType": "YulTypedName",
														"src": "804:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:10",
														"nodeType": "YulTypedName",
														"src": "816:6:10",
														"type": ""
													}
												],
												"src": "758:327:10"
											},
											{
												"body": {
													"nativeSrc": "1133:48:10",
													"nodeType": "YulBlock",
													"src": "1133:48:10",
													"statements": [
														{
															"nativeSrc": "1143:32:10",
															"nodeType": "YulAssignment",
															"src": "1143:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:10"
																		},
																		"nativeSrc": "1161:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:10"
																},
																"nativeSrc": "1154:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:10",
														"nodeType": "YulTypedName",
														"src": "1115:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:10",
														"nodeType": "YulTypedName",
														"src": "1125:7:10",
														"type": ""
													}
												],
												"src": "1091:90:10"
											},
											{
												"body": {
													"nativeSrc": "1246:50:10",
													"nodeType": "YulBlock",
													"src": "1246:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:10"
																		},
																		"nativeSrc": "1268:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:10"
																},
																"nativeSrc": "1256:34:10",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:10"
															},
															"nativeSrc": "1256:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:10",
														"nodeType": "YulTypedName",
														"src": "1234:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:10",
														"nodeType": "YulTypedName",
														"src": "1241:3:10",
														"type": ""
													}
												],
												"src": "1187:109:10"
											},
											{
												"body": {
													"nativeSrc": "1394:118:10",
													"nodeType": "YulBlock",
													"src": "1394:118:10",
													"statements": [
														{
															"nativeSrc": "1404:26:10",
															"nodeType": "YulAssignment",
															"src": "1404:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:10"
																},
																"nativeSrc": "1412:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:10"
																		},
																		"nativeSrc": "1487:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:10"
																},
																"nativeSrc": "1440:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:10"
															},
															"nativeSrc": "1440:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:10",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:10",
														"nodeType": "YulTypedName",
														"src": "1378:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:10",
														"nodeType": "YulTypedName",
														"src": "1389:4:10",
														"type": ""
													}
												],
												"src": "1302:210:10"
											},
											{
												"body": {
													"nativeSrc": "1577:40:10",
													"nodeType": "YulBlock",
													"src": "1577:40:10",
													"statements": [
														{
															"nativeSrc": "1588:22:10",
															"nodeType": "YulAssignment",
															"src": "1588:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:10"
																},
																"nativeSrc": "1598:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:10",
														"nodeType": "YulTypedName",
														"src": "1560:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:10",
														"nodeType": "YulTypedName",
														"src": "1570:6:10",
														"type": ""
													}
												],
												"src": "1518:99:10"
											},
											{
												"body": {
													"nativeSrc": "1719:73:10",
													"nodeType": "YulBlock",
													"src": "1719:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:10"
																},
																"nativeSrc": "1729:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:10"
															},
															"nativeSrc": "1729:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:10"
														},
														{
															"nativeSrc": "1757:29:10",
															"nodeType": "YulAssignment",
															"src": "1757:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:10"
																},
																"nativeSrc": "1772:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:10",
														"nodeType": "YulTypedName",
														"src": "1691:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:10",
														"nodeType": "YulTypedName",
														"src": "1696:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:10",
														"nodeType": "YulTypedName",
														"src": "1707:11:10",
														"type": ""
													}
												],
												"src": "1623:169:10"
											},
											{
												"body": {
													"nativeSrc": "1860:77:10",
													"nodeType": "YulBlock",
													"src": "1860:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:10"
																},
																"nativeSrc": "1871:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:10"
															},
															"nativeSrc": "1871:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:10"
																		},
																		"nativeSrc": "1910:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:10"
																},
																"nativeSrc": "1903:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:10"
															},
															"nativeSrc": "1903:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:10",
														"nodeType": "YulTypedName",
														"src": "1842:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:10",
														"nodeType": "YulTypedName",
														"src": "1847:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:10",
														"nodeType": "YulTypedName",
														"src": "1852:6:10",
														"type": ""
													}
												],
												"src": "1798:139:10"
											},
											{
												"body": {
													"nativeSrc": "1991:54:10",
													"nodeType": "YulBlock",
													"src": "1991:54:10",
													"statements": [
														{
															"nativeSrc": "2001:38:10",
															"nodeType": "YulAssignment",
															"src": "2001:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:10"
																		},
																		"nativeSrc": "2015:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:10"
																		},
																		"nativeSrc": "2031:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:10"
																},
																"nativeSrc": "2011:28:10",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:10",
														"nodeType": "YulTypedName",
														"src": "1974:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:10",
														"nodeType": "YulTypedName",
														"src": "1984:6:10",
														"type": ""
													}
												],
												"src": "1943:102:10"
											},
											{
												"body": {
													"nativeSrc": "2143:285:10",
													"nodeType": "YulBlock",
													"src": "2143:285:10",
													"statements": [
														{
															"nativeSrc": "2153:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:10"
																},
																"nativeSrc": "2167:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:10",
															"nodeType": "YulAssignment",
															"src": "2215:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:10"
																},
																"nativeSrc": "2222:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:10"
																		},
																		"nativeSrc": "2337:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:10"
																},
																"nativeSrc": "2302:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:10"
															},
															"nativeSrc": "2302:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:10"
														},
														{
															"nativeSrc": "2376:46:10",
															"nodeType": "YulAssignment",
															"src": "2376:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:10"
																		},
																		"nativeSrc": "2392:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:10"
																},
																"nativeSrc": "2383:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:10",
														"nodeType": "YulTypedName",
														"src": "2124:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:10",
														"nodeType": "YulTypedName",
														"src": "2131:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:10",
														"nodeType": "YulTypedName",
														"src": "2139:3:10",
														"type": ""
													}
												],
												"src": "2051:377:10"
											},
											{
												"body": {
													"nativeSrc": "2552:195:10",
													"nodeType": "YulBlock",
													"src": "2552:195:10",
													"statements": [
														{
															"nativeSrc": "2562:26:10",
															"nodeType": "YulAssignment",
															"src": "2562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:10"
																},
																"nativeSrc": "2570:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:10"
																		},
																		"nativeSrc": "2605:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:10"
																		},
																		"nativeSrc": "2624:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:10"
																},
																"nativeSrc": "2598:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:10"
															},
															"nativeSrc": "2598:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:10"
														},
														{
															"nativeSrc": "2654:86:10",
															"nodeType": "YulAssignment",
															"src": "2654:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:10"
																},
																"nativeSrc": "2662:78:10",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:10",
														"nodeType": "YulTypedName",
														"src": "2524:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:10",
														"nodeType": "YulTypedName",
														"src": "2536:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:10",
														"nodeType": "YulTypedName",
														"src": "2547:4:10",
														"type": ""
													}
												],
												"src": "2434:313:10"
											},
											{
												"body": {
													"nativeSrc": "2798:81:10",
													"nodeType": "YulBlock",
													"src": "2798:81:10",
													"statements": [
														{
															"nativeSrc": "2808:65:10",
															"nodeType": "YulAssignment",
															"src": "2808:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:10"
																},
																"nativeSrc": "2819:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:10",
														"nodeType": "YulTypedName",
														"src": "2780:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:10",
														"nodeType": "YulTypedName",
														"src": "2790:7:10",
														"type": ""
													}
												],
												"src": "2753:126:10"
											},
											{
												"body": {
													"nativeSrc": "2930:51:10",
													"nodeType": "YulBlock",
													"src": "2930:51:10",
													"statements": [
														{
															"nativeSrc": "2940:35:10",
															"nodeType": "YulAssignment",
															"src": "2940:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:10"
																},
																"nativeSrc": "2951:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:10",
														"nodeType": "YulTypedName",
														"src": "2912:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:10",
														"nodeType": "YulTypedName",
														"src": "2922:7:10",
														"type": ""
													}
												],
												"src": "2885:96:10"
											},
											{
												"body": {
													"nativeSrc": "3030:79:10",
													"nodeType": "YulBlock",
													"src": "3030:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:10",
																"nodeType": "YulBlock",
																"src": "3087:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:10"
																			},
																			"nativeSrc": "3089:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:10"
																		},
																		"nativeSrc": "3089:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:10"
																				},
																				"nativeSrc": "3060:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:10"
																		},
																		"nativeSrc": "3050:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:10"
																},
																"nativeSrc": "3043:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:10"
															},
															"nativeSrc": "3040:63:10",
															"nodeType": "YulIf",
															"src": "3040:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:10",
														"nodeType": "YulTypedName",
														"src": "3023:5:10",
														"type": ""
													}
												],
												"src": "2987:122:10"
											},
											{
												"body": {
													"nativeSrc": "3167:87:10",
													"nodeType": "YulBlock",
													"src": "3167:87:10",
													"statements": [
														{
															"nativeSrc": "3177:29:10",
															"nodeType": "YulAssignment",
															"src": "3177:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:10"
																},
																"nativeSrc": "3186:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:10"
																},
																"nativeSrc": "3215:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:10"
															},
															"nativeSrc": "3215:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:10",
														"nodeType": "YulTypedName",
														"src": "3145:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:10",
														"nodeType": "YulTypedName",
														"src": "3153:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:10",
														"nodeType": "YulTypedName",
														"src": "3161:5:10",
														"type": ""
													}
												],
												"src": "3115:139:10"
											},
											{
												"body": {
													"nativeSrc": "3305:32:10",
													"nodeType": "YulBlock",
													"src": "3305:32:10",
													"statements": [
														{
															"nativeSrc": "3315:16:10",
															"nodeType": "YulAssignment",
															"src": "3315:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:10",
																"nodeType": "YulIdentifier",
																"src": "3326:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:10",
														"nodeType": "YulTypedName",
														"src": "3287:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:10",
														"nodeType": "YulTypedName",
														"src": "3297:7:10",
														"type": ""
													}
												],
												"src": "3260:77:10"
											},
											{
												"body": {
													"nativeSrc": "3386:79:10",
													"nodeType": "YulBlock",
													"src": "3386:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:10",
																"nodeType": "YulBlock",
																"src": "3443:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:10"
																			},
																			"nativeSrc": "3445:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:10"
																		},
																		"nativeSrc": "3445:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:10"
																				},
																				"nativeSrc": "3416:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:10"
																		},
																		"nativeSrc": "3406:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:10"
																},
																"nativeSrc": "3399:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:10"
															},
															"nativeSrc": "3396:63:10",
															"nodeType": "YulIf",
															"src": "3396:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:10",
														"nodeType": "YulTypedName",
														"src": "3379:5:10",
														"type": ""
													}
												],
												"src": "3343:122:10"
											},
											{
												"body": {
													"nativeSrc": "3523:87:10",
													"nodeType": "YulBlock",
													"src": "3523:87:10",
													"statements": [
														{
															"nativeSrc": "3533:29:10",
															"nodeType": "YulAssignment",
															"src": "3533:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:10"
																},
																"nativeSrc": "3542:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:10"
																},
																"nativeSrc": "3571:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:10"
															},
															"nativeSrc": "3571:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:10",
														"nodeType": "YulTypedName",
														"src": "3501:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:10",
														"nodeType": "YulTypedName",
														"src": "3509:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:10",
														"nodeType": "YulTypedName",
														"src": "3517:5:10",
														"type": ""
													}
												],
												"src": "3471:139:10"
											},
											{
												"body": {
													"nativeSrc": "3699:391:10",
													"nodeType": "YulBlock",
													"src": "3699:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:10",
																"nodeType": "YulBlock",
																"src": "3745:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:10"
																			},
																			"nativeSrc": "3747:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:10"
																		},
																		"nativeSrc": "3747:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:10"
																		},
																		"nativeSrc": "3716:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:10"
																},
																"nativeSrc": "3712:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:10"
															},
															"nativeSrc": "3709:119:10",
															"nodeType": "YulIf",
															"src": "3709:119:10"
														},
														{
															"nativeSrc": "3838:117:10",
															"nodeType": "YulBlock",
															"src": "3838:117:10",
															"statements": [
																{
																	"nativeSrc": "3853:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:10"
																				},
																				"nativeSrc": "3913:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:10"
																		},
																		"nativeSrc": "3892:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:10",
															"nodeType": "YulBlock",
															"src": "3965:118:10",
															"statements": [
																{
																	"nativeSrc": "3980:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:10"
																				},
																				"nativeSrc": "4041:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:10"
																		},
																		"nativeSrc": "4020:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:10",
														"nodeType": "YulTypedName",
														"src": "3661:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:10",
														"nodeType": "YulTypedName",
														"src": "3672:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:10",
														"nodeType": "YulTypedName",
														"src": "3684:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:10",
														"nodeType": "YulTypedName",
														"src": "3692:6:10",
														"type": ""
													}
												],
												"src": "3616:474:10"
											},
											{
												"body": {
													"nativeSrc": "4161:53:10",
													"nodeType": "YulBlock",
													"src": "4161:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:10"
																		},
																		"nativeSrc": "4183:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:10"
																},
																"nativeSrc": "4171:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:10"
															},
															"nativeSrc": "4171:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:10",
														"nodeType": "YulTypedName",
														"src": "4149:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:10",
														"nodeType": "YulTypedName",
														"src": "4156:3:10",
														"type": ""
													}
												],
												"src": "4096:118:10"
											},
											{
												"body": {
													"nativeSrc": "4318:124:10",
													"nodeType": "YulBlock",
													"src": "4318:124:10",
													"statements": [
														{
															"nativeSrc": "4328:26:10",
															"nodeType": "YulAssignment",
															"src": "4328:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:10"
																},
																"nativeSrc": "4336:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:10"
																		},
																		"nativeSrc": "4417:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:10"
																},
																"nativeSrc": "4364:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:10"
															},
															"nativeSrc": "4364:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:10",
														"nodeType": "YulTypedName",
														"src": "4290:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:10",
														"nodeType": "YulTypedName",
														"src": "4302:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:10",
														"nodeType": "YulTypedName",
														"src": "4313:4:10",
														"type": ""
													}
												],
												"src": "4220:222:10"
											},
											{
												"body": {
													"nativeSrc": "4548:519:10",
													"nodeType": "YulBlock",
													"src": "4548:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4594:83:10",
																"nodeType": "YulBlock",
																"src": "4594:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4596:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4596:77:10"
																			},
																			"nativeSrc": "4596:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:79:10"
																		},
																		"nativeSrc": "4596:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4565:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:10"
																		},
																		"nativeSrc": "4565:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4561:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:10"
																},
																"nativeSrc": "4561:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:10"
															},
															"nativeSrc": "4558:119:10",
															"nodeType": "YulIf",
															"src": "4558:119:10"
														},
														{
															"nativeSrc": "4687:117:10",
															"nodeType": "YulBlock",
															"src": "4687:117:10",
															"statements": [
																{
																	"nativeSrc": "4702:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4702:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4716:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4716:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4706:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4706:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4731:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4731:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4766:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4777:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4777:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4762:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:10"
																				},
																				"nativeSrc": "4762:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4786:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4786:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4741:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4741:20:10"
																		},
																		"nativeSrc": "4741:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4731:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4731:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4814:118:10",
															"nodeType": "YulBlock",
															"src": "4814:118:10",
															"statements": [
																{
																	"nativeSrc": "4829:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4843:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4833:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4859:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4859:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4894:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4894:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4905:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4905:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4890:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4890:3:10"
																				},
																				"nativeSrc": "4890:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4890:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4869:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4869:20:10"
																		},
																		"nativeSrc": "4869:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4859:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4942:118:10",
															"nodeType": "YulBlock",
															"src": "4942:118:10",
															"statements": [
																{
																	"nativeSrc": "4957:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4957:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4971:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4961:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4961:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4987:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5022:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5022:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5033:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5033:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5018:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5018:3:10"
																				},
																				"nativeSrc": "5018:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5018:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5042:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4997:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4997:20:10"
																		},
																		"nativeSrc": "4997:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4987:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4448:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:10",
														"nodeType": "YulTypedName",
														"src": "4502:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4513:7:10",
														"nodeType": "YulTypedName",
														"src": "4513:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4525:6:10",
														"nodeType": "YulTypedName",
														"src": "4525:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4533:6:10",
														"nodeType": "YulTypedName",
														"src": "4533:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4541:6:10",
														"nodeType": "YulTypedName",
														"src": "4541:6:10",
														"type": ""
													}
												],
												"src": "4448:619:10"
											},
											{
												"body": {
													"nativeSrc": "5118:32:10",
													"nodeType": "YulBlock",
													"src": "5118:32:10",
													"statements": [
														{
															"nativeSrc": "5128:16:10",
															"nodeType": "YulAssignment",
															"src": "5128:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "5139:5:10",
																"nodeType": "YulIdentifier",
																"src": "5139:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5128:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5128:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5073:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:10",
														"nodeType": "YulTypedName",
														"src": "5100:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5110:7:10",
														"nodeType": "YulTypedName",
														"src": "5110:7:10",
														"type": ""
													}
												],
												"src": "5073:77:10"
											},
											{
												"body": {
													"nativeSrc": "5199:79:10",
													"nodeType": "YulBlock",
													"src": "5199:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5256:16:10",
																"nodeType": "YulBlock",
																"src": "5256:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5268:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5268:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5258:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:10"
																			},
																			"nativeSrc": "5258:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5258:12:10"
																		},
																		"nativeSrc": "5258:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5258:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5222:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5247:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5247:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5229:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5229:17:10"
																				},
																				"nativeSrc": "5229:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5219:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:10"
																		},
																		"nativeSrc": "5219:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5219:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:10"
																},
																"nativeSrc": "5212:43:10",
																"nodeType": "YulFunctionCall",
																"src": "5212:43:10"
															},
															"nativeSrc": "5209:63:10",
															"nodeType": "YulIf",
															"src": "5209:63:10"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5156:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5192:5:10",
														"nodeType": "YulTypedName",
														"src": "5192:5:10",
														"type": ""
													}
												],
												"src": "5156:122:10"
											},
											{
												"body": {
													"nativeSrc": "5336:87:10",
													"nodeType": "YulBlock",
													"src": "5336:87:10",
													"statements": [
														{
															"nativeSrc": "5346:29:10",
															"nodeType": "YulAssignment",
															"src": "5346:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5368:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5368:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5355:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5355:12:10"
																},
																"nativeSrc": "5355:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5355:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5346:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5346:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5411:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5411:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5384:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "5384:26:10"
																},
																"nativeSrc": "5384:33:10",
																"nodeType": "YulFunctionCall",
																"src": "5384:33:10"
															},
															"nativeSrc": "5384:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "5384:33:10"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5284:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5314:6:10",
														"nodeType": "YulTypedName",
														"src": "5314:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5322:3:10",
														"nodeType": "YulTypedName",
														"src": "5322:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5330:5:10",
														"nodeType": "YulTypedName",
														"src": "5330:5:10",
														"type": ""
													}
												],
												"src": "5284:139:10"
											},
											{
												"body": {
													"nativeSrc": "5495:263:10",
													"nodeType": "YulBlock",
													"src": "5495:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5541:83:10",
																"nodeType": "YulBlock",
																"src": "5541:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5543:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5543:77:10"
																			},
																			"nativeSrc": "5543:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:79:10"
																		},
																		"nativeSrc": "5543:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5543:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5516:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5516:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5512:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:10"
																		},
																		"nativeSrc": "5512:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5508:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:10"
																},
																"nativeSrc": "5508:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5508:32:10"
															},
															"nativeSrc": "5505:119:10",
															"nodeType": "YulIf",
															"src": "5505:119:10"
														},
														{
															"nativeSrc": "5634:117:10",
															"nodeType": "YulBlock",
															"src": "5634:117:10",
															"statements": [
																{
																	"nativeSrc": "5649:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5649:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5663:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5653:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5653:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5678:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5678:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5713:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5713:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5724:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5724:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5709:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5709:3:10"
																				},
																				"nativeSrc": "5709:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5709:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5733:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5733:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5688:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5688:20:10"
																		},
																		"nativeSrc": "5688:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5678:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5678:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5429:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:10",
														"nodeType": "YulTypedName",
														"src": "5465:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5476:7:10",
														"nodeType": "YulTypedName",
														"src": "5476:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5488:6:10",
														"nodeType": "YulTypedName",
														"src": "5488:6:10",
														"type": ""
													}
												],
												"src": "5429:329:10"
											},
											{
												"body": {
													"nativeSrc": "5829:53:10",
													"nodeType": "YulBlock",
													"src": "5829:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5846:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5846:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5869:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5869:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5851:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5851:17:10"
																		},
																		"nativeSrc": "5851:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5839:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:10"
																},
																"nativeSrc": "5839:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5839:37:10"
															},
															"nativeSrc": "5839:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5839:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5764:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:10",
														"nodeType": "YulTypedName",
														"src": "5817:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5824:3:10",
														"nodeType": "YulTypedName",
														"src": "5824:3:10",
														"type": ""
													}
												],
												"src": "5764:118:10"
											},
											{
												"body": {
													"nativeSrc": "5986:124:10",
													"nodeType": "YulBlock",
													"src": "5986:124:10",
													"statements": [
														{
															"nativeSrc": "5996:26:10",
															"nodeType": "YulAssignment",
															"src": "5996:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6008:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6004:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:10"
																},
																"nativeSrc": "6004:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6004:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5996:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6076:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6089:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6100:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6085:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:10"
																		},
																		"nativeSrc": "6085:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6032:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6032:43:10"
																},
																"nativeSrc": "6032:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6032:71:10"
															},
															"nativeSrc": "6032:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6032:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5888:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:10",
														"nodeType": "YulTypedName",
														"src": "5958:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5970:6:10",
														"nodeType": "YulTypedName",
														"src": "5970:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5981:4:10",
														"nodeType": "YulTypedName",
														"src": "5981:4:10",
														"type": ""
													}
												],
												"src": "5888:222:10"
											},
											{
												"body": {
													"nativeSrc": "6199:391:10",
													"nodeType": "YulBlock",
													"src": "6199:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6245:83:10",
																"nodeType": "YulBlock",
																"src": "6245:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6247:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6247:77:10"
																			},
																			"nativeSrc": "6247:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6247:79:10"
																		},
																		"nativeSrc": "6247:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6247:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6220:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6220:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6229:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6229:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6216:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:10"
																		},
																		"nativeSrc": "6216:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6216:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6241:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6241:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6212:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:10"
																},
																"nativeSrc": "6212:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6212:32:10"
															},
															"nativeSrc": "6209:119:10",
															"nodeType": "YulIf",
															"src": "6209:119:10"
														},
														{
															"nativeSrc": "6338:117:10",
															"nodeType": "YulBlock",
															"src": "6338:117:10",
															"statements": [
																{
																	"nativeSrc": "6353:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6353:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6367:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6367:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6357:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6357:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6382:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6382:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6417:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6417:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6428:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6428:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6413:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6413:3:10"
																				},
																				"nativeSrc": "6413:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6413:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6437:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6437:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6392:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6392:20:10"
																		},
																		"nativeSrc": "6392:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6382:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6382:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6465:118:10",
															"nodeType": "YulBlock",
															"src": "6465:118:10",
															"statements": [
																{
																	"nativeSrc": "6480:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6480:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6494:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6484:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6484:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6510:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6510:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6545:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6545:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6556:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6556:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6541:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6541:3:10"
																				},
																				"nativeSrc": "6541:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6541:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6565:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6520:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6520:20:10"
																		},
																		"nativeSrc": "6520:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6520:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6510:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6510:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6116:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6161:9:10",
														"nodeType": "YulTypedName",
														"src": "6161:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6172:7:10",
														"nodeType": "YulTypedName",
														"src": "6172:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6184:6:10",
														"nodeType": "YulTypedName",
														"src": "6184:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6192:6:10",
														"nodeType": "YulTypedName",
														"src": "6192:6:10",
														"type": ""
													}
												],
												"src": "6116:474:10"
											},
											{
												"body": {
													"nativeSrc": "6639:43:10",
													"nodeType": "YulBlock",
													"src": "6639:43:10",
													"statements": [
														{
															"nativeSrc": "6649:27:10",
															"nodeType": "YulAssignment",
															"src": "6649:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6664:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6664:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6671:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6660:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:10"
																},
																"nativeSrc": "6660:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6660:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6649:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6596:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6621:5:10",
														"nodeType": "YulTypedName",
														"src": "6621:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6631:7:10",
														"nodeType": "YulTypedName",
														"src": "6631:7:10",
														"type": ""
													}
												],
												"src": "6596:86:10"
											},
											{
												"body": {
													"nativeSrc": "6749:51:10",
													"nodeType": "YulBlock",
													"src": "6749:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6766:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6787:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6787:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6771:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "6771:15:10"
																		},
																		"nativeSrc": "6771:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:10"
																},
																"nativeSrc": "6759:35:10",
																"nodeType": "YulFunctionCall",
																"src": "6759:35:10"
															},
															"nativeSrc": "6759:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "6759:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6688:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6737:5:10",
														"nodeType": "YulTypedName",
														"src": "6737:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6744:3:10",
														"nodeType": "YulTypedName",
														"src": "6744:3:10",
														"type": ""
													}
												],
												"src": "6688:112:10"
											},
											{
												"body": {
													"nativeSrc": "6900:120:10",
													"nodeType": "YulBlock",
													"src": "6900:120:10",
													"statements": [
														{
															"nativeSrc": "6910:26:10",
															"nodeType": "YulAssignment",
															"src": "6910:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6918:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:10"
																},
																"nativeSrc": "6918:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6918:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6910:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6986:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6986:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6999:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7010:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7010:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:10"
																		},
																		"nativeSrc": "6995:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6946:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "6946:39:10"
																},
																"nativeSrc": "6946:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6946:67:10"
															},
															"nativeSrc": "6946:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "6946:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6806:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6872:9:10",
														"nodeType": "YulTypedName",
														"src": "6872:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6884:6:10",
														"nodeType": "YulTypedName",
														"src": "6884:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6895:4:10",
														"nodeType": "YulTypedName",
														"src": "6895:4:10",
														"type": ""
													}
												],
												"src": "6806:214:10"
											},
											{
												"body": {
													"nativeSrc": "7092:263:10",
													"nodeType": "YulBlock",
													"src": "7092:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7138:83:10",
																"nodeType": "YulBlock",
																"src": "7138:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7140:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7140:77:10"
																			},
																			"nativeSrc": "7140:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7140:79:10"
																		},
																		"nativeSrc": "7140:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7140:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7113:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7113:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7122:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7122:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7109:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:10"
																		},
																		"nativeSrc": "7109:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7134:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7134:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7105:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7105:3:10"
																},
																"nativeSrc": "7105:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7105:32:10"
															},
															"nativeSrc": "7102:119:10",
															"nodeType": "YulIf",
															"src": "7102:119:10"
														},
														{
															"nativeSrc": "7231:117:10",
															"nodeType": "YulBlock",
															"src": "7231:117:10",
															"statements": [
																{
																	"nativeSrc": "7246:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7246:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7260:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7260:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7250:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7250:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7275:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7275:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7310:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7310:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7321:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7321:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7306:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7306:3:10"
																				},
																				"nativeSrc": "7306:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7306:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7330:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7330:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7285:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7285:20:10"
																		},
																		"nativeSrc": "7285:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7285:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7275:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7275:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7026:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7062:9:10",
														"nodeType": "YulTypedName",
														"src": "7062:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7073:7:10",
														"nodeType": "YulTypedName",
														"src": "7073:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7085:6:10",
														"nodeType": "YulTypedName",
														"src": "7085:6:10",
														"type": ""
													}
												],
												"src": "7026:329:10"
											},
											{
												"body": {
													"nativeSrc": "7444:391:10",
													"nodeType": "YulBlock",
													"src": "7444:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7490:83:10",
																"nodeType": "YulBlock",
																"src": "7490:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7492:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7492:77:10"
																			},
																			"nativeSrc": "7492:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7492:79:10"
																		},
																		"nativeSrc": "7492:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7492:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7465:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7465:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7474:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7474:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7461:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:10"
																		},
																		"nativeSrc": "7461:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7461:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7486:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7457:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:10"
																},
																"nativeSrc": "7457:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7457:32:10"
															},
															"nativeSrc": "7454:119:10",
															"nodeType": "YulIf",
															"src": "7454:119:10"
														},
														{
															"nativeSrc": "7583:117:10",
															"nodeType": "YulBlock",
															"src": "7583:117:10",
															"statements": [
																{
																	"nativeSrc": "7598:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7598:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7612:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7612:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7602:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7602:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7627:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7627:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7662:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7662:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7673:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7673:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7658:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7658:3:10"
																				},
																				"nativeSrc": "7658:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7658:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7682:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7682:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7637:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7637:20:10"
																		},
																		"nativeSrc": "7637:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7627:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7627:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7710:118:10",
															"nodeType": "YulBlock",
															"src": "7710:118:10",
															"statements": [
																{
																	"nativeSrc": "7725:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7725:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7739:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7739:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7729:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7729:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7755:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7755:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7790:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7790:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7801:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7801:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7786:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7786:3:10"
																				},
																				"nativeSrc": "7786:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7786:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7810:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7810:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7765:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7765:20:10"
																		},
																		"nativeSrc": "7765:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7765:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7755:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7755:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7361:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7406:9:10",
														"nodeType": "YulTypedName",
														"src": "7406:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7417:7:10",
														"nodeType": "YulTypedName",
														"src": "7417:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7429:6:10",
														"nodeType": "YulTypedName",
														"src": "7429:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7437:6:10",
														"nodeType": "YulTypedName",
														"src": "7437:6:10",
														"type": ""
													}
												],
												"src": "7361:474:10"
											},
											{
												"body": {
													"nativeSrc": "7869:152:10",
													"nodeType": "YulBlock",
													"src": "7869:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7886:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7886:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7889:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7879:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7879:6:10"
																},
																"nativeSrc": "7879:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7879:88:10"
															},
															"nativeSrc": "7879:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7879:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7983:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7983:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7986:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7986:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7976:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7976:6:10"
																},
																"nativeSrc": "7976:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7976:15:10"
															},
															"nativeSrc": "7976:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7976:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8007:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8007:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8010:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8000:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:10"
																},
																"nativeSrc": "8000:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8000:15:10"
															},
															"nativeSrc": "8000:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8000:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7841:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7841:180:10"
											},
											{
												"body": {
													"nativeSrc": "8078:269:10",
													"nodeType": "YulBlock",
													"src": "8078:269:10",
													"statements": [
														{
															"nativeSrc": "8088:22:10",
															"nodeType": "YulAssignment",
															"src": "8088:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8102:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8102:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8108:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8108:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8098:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8098:3:10"
																},
																"nativeSrc": "8098:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8098:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8088:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:10"
																}
															]
														},
														{
															"nativeSrc": "8119:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8119:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8149:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8149:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8155:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8155:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8145:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8145:3:10"
																},
																"nativeSrc": "8145:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8145:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8123:18:10",
																	"nodeType": "YulTypedName",
																	"src": "8123:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8196:51:10",
																"nodeType": "YulBlock",
																"src": "8196:51:10",
																"statements": [
																	{
																		"nativeSrc": "8210:27:10",
																		"nodeType": "YulAssignment",
																		"src": "8210:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8224:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8224:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8232:4:10",
																					"nodeType": "YulLiteral",
																					"src": "8232:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8220:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8220:3:10"
																			},
																			"nativeSrc": "8220:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8220:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8210:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8210:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8176:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "8176:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8169:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:10"
																},
																"nativeSrc": "8169:26:10",
																"nodeType": "YulFunctionCall",
																"src": "8169:26:10"
															},
															"nativeSrc": "8166:81:10",
															"nodeType": "YulIf",
															"src": "8166:81:10"
														},
														{
															"body": {
																"nativeSrc": "8299:42:10",
																"nodeType": "YulBlock",
																"src": "8299:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8313:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8313:16:10"
																			},
																			"nativeSrc": "8313:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8313:18:10"
																		},
																		"nativeSrc": "8313:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8313:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8263:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "8263:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8286:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8286:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8294:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8294:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8283:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8283:2:10"
																		},
																		"nativeSrc": "8283:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8283:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8260:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8260:2:10"
																},
																"nativeSrc": "8260:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8260:38:10"
															},
															"nativeSrc": "8257:84:10",
															"nodeType": "YulIf",
															"src": "8257:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8027:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8062:4:10",
														"nodeType": "YulTypedName",
														"src": "8062:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8071:6:10",
														"nodeType": "YulTypedName",
														"src": "8071:6:10",
														"type": ""
													}
												],
												"src": "8027:320:10"
											},
											{
												"body": {
													"nativeSrc": "8459:55:10",
													"nodeType": "YulBlock",
													"src": "8459:55:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8481:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8481:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8489:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8489:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8477:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8477:3:10"
																		},
																		"nativeSrc": "8477:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8477:14:10"
																	},
																	{
																		"hexValue": "4f6e6c79206d696e746572",
																		"kind": "string",
																		"nativeSrc": "8493:13:10",
																		"nodeType": "YulLiteral",
																		"src": "8493:13:10",
																		"type": "",
																		"value": "Only minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8470:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8470:6:10"
																},
																"nativeSrc": "8470:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8470:37:10"
															},
															"nativeSrc": "8470:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "8470:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
												"nativeSrc": "8353:161:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8451:6:10",
														"nodeType": "YulTypedName",
														"src": "8451:6:10",
														"type": ""
													}
												],
												"src": "8353:161:10"
											},
											{
												"body": {
													"nativeSrc": "8666:220:10",
													"nodeType": "YulBlock",
													"src": "8666:220:10",
													"statements": [
														{
															"nativeSrc": "8676:74:10",
															"nodeType": "YulAssignment",
															"src": "8676:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8742:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8742:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8747:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8747:2:10",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8683:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8683:58:10"
																},
																"nativeSrc": "8683:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8683:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8676:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8676:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8848:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8848:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
																	"nativeSrc": "8759:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8759:88:10"
																},
																"nativeSrc": "8759:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8759:93:10"
															},
															"nativeSrc": "8759:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8759:93:10"
														},
														{
															"nativeSrc": "8861:19:10",
															"nodeType": "YulAssignment",
															"src": "8861:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8872:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8872:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8877:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8877:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8868:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8868:3:10"
																},
																"nativeSrc": "8868:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8868:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8861:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8861:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8520:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8654:3:10",
														"nodeType": "YulTypedName",
														"src": "8654:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8662:3:10",
														"nodeType": "YulTypedName",
														"src": "8662:3:10",
														"type": ""
													}
												],
												"src": "8520:366:10"
											},
											{
												"body": {
													"nativeSrc": "9063:248:10",
													"nodeType": "YulBlock",
													"src": "9063:248:10",
													"statements": [
														{
															"nativeSrc": "9073:26:10",
															"nodeType": "YulAssignment",
															"src": "9073:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9085:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9085:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9096:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9096:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9081:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9081:3:10"
																},
																"nativeSrc": "9081:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9081:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9073:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9073:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9120:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9120:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9131:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9131:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9116:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9116:3:10"
																		},
																		"nativeSrc": "9116:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9116:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9139:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9139:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9145:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9145:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9135:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9135:3:10"
																		},
																		"nativeSrc": "9135:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9135:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9109:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9109:6:10"
																},
																"nativeSrc": "9109:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9109:47:10"
															},
															"nativeSrc": "9109:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9109:47:10"
														},
														{
															"nativeSrc": "9165:139:10",
															"nodeType": "YulAssignment",
															"src": "9165:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9299:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9299:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9173:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9173:124:10"
																},
																"nativeSrc": "9173:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9173:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9165:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9165:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8892:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9043:9:10",
														"nodeType": "YulTypedName",
														"src": "9043:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9058:4:10",
														"nodeType": "YulTypedName",
														"src": "9058:4:10",
														"type": ""
													}
												],
												"src": "8892:419:10"
											},
											{
												"body": {
													"nativeSrc": "9382:53:10",
													"nodeType": "YulBlock",
													"src": "9382:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9399:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9399:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9422:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9422:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9404:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "9404:17:10"
																		},
																		"nativeSrc": "9404:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9404:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9392:6:10"
																},
																"nativeSrc": "9392:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9392:37:10"
															},
															"nativeSrc": "9392:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "9392:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9317:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9370:5:10",
														"nodeType": "YulTypedName",
														"src": "9370:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9377:3:10",
														"nodeType": "YulTypedName",
														"src": "9377:3:10",
														"type": ""
													}
												],
												"src": "9317:118:10"
											},
											{
												"body": {
													"nativeSrc": "9595:288:10",
													"nodeType": "YulBlock",
													"src": "9595:288:10",
													"statements": [
														{
															"nativeSrc": "9605:26:10",
															"nodeType": "YulAssignment",
															"src": "9605:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9617:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9617:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9628:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9628:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9613:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9613:3:10"
																},
																"nativeSrc": "9613:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9613:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9605:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9605:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9685:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9685:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9698:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9698:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9709:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9709:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9694:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9694:3:10"
																		},
																		"nativeSrc": "9694:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9694:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9641:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9641:43:10"
																},
																"nativeSrc": "9641:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9641:71:10"
															},
															"nativeSrc": "9641:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9641:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9766:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9766:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9779:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9779:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9790:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9790:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9775:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9775:3:10"
																		},
																		"nativeSrc": "9775:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9775:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9722:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9722:43:10"
																},
																"nativeSrc": "9722:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9722:72:10"
															},
															"nativeSrc": "9722:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9722:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9848:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9848:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9861:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9861:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9872:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9872:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9857:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9857:3:10"
																		},
																		"nativeSrc": "9857:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9857:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9804:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9804:43:10"
																},
																"nativeSrc": "9804:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9804:72:10"
															},
															"nativeSrc": "9804:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9804:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9441:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9551:9:10",
														"nodeType": "YulTypedName",
														"src": "9551:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9563:6:10",
														"nodeType": "YulTypedName",
														"src": "9563:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9571:6:10",
														"nodeType": "YulTypedName",
														"src": "9571:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9579:6:10",
														"nodeType": "YulTypedName",
														"src": "9579:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9590:4:10",
														"nodeType": "YulTypedName",
														"src": "9590:4:10",
														"type": ""
													}
												],
												"src": "9441:442:10"
											},
											{
												"body": {
													"nativeSrc": "9987:124:10",
													"nodeType": "YulBlock",
													"src": "9987:124:10",
													"statements": [
														{
															"nativeSrc": "9997:26:10",
															"nodeType": "YulAssignment",
															"src": "9997:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10009:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10009:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10020:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10020:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10005:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10005:3:10"
																},
																"nativeSrc": "10005:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10005:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9997:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9997:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10077:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10077:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10090:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10090:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10101:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10101:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10086:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10086:3:10"
																		},
																		"nativeSrc": "10086:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10086:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10033:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10033:43:10"
																},
																"nativeSrc": "10033:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10033:71:10"
															},
															"nativeSrc": "10033:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10033:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9889:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9959:9:10",
														"nodeType": "YulTypedName",
														"src": "9959:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9971:6:10",
														"nodeType": "YulTypedName",
														"src": "9971:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9982:4:10",
														"nodeType": "YulTypedName",
														"src": "9982:4:10",
														"type": ""
													}
												],
												"src": "9889:222:10"
											},
											{
												"body": {
													"nativeSrc": "10145:152:10",
													"nodeType": "YulBlock",
													"src": "10145:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10162:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10162:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10165:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10165:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10155:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10155:6:10"
																},
																"nativeSrc": "10155:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10155:88:10"
															},
															"nativeSrc": "10155:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10155:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10259:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10259:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10262:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10262:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10252:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10252:6:10"
																},
																"nativeSrc": "10252:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10252:15:10"
															},
															"nativeSrc": "10252:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10252:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10283:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10283:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10286:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10286:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10276:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10276:6:10"
																},
																"nativeSrc": "10276:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10276:15:10"
															},
															"nativeSrc": "10276:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10276:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10117:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10117:180:10"
											},
											{
												"body": {
													"nativeSrc": "10347:147:10",
													"nodeType": "YulBlock",
													"src": "10347:147:10",
													"statements": [
														{
															"nativeSrc": "10357:25:10",
															"nodeType": "YulAssignment",
															"src": "10357:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10380:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10380:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10362:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10362:17:10"
																},
																"nativeSrc": "10362:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10362:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10357:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10357:1:10"
																}
															]
														},
														{
															"nativeSrc": "10391:25:10",
															"nodeType": "YulAssignment",
															"src": "10391:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10414:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10414:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10396:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10396:17:10"
																},
																"nativeSrc": "10396:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10396:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10391:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10391:1:10"
																}
															]
														},
														{
															"nativeSrc": "10425:16:10",
															"nodeType": "YulAssignment",
															"src": "10425:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10436:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10436:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10439:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10439:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10432:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10432:3:10"
																},
																"nativeSrc": "10432:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10432:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10425:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10425:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10465:22:10",
																"nodeType": "YulBlock",
																"src": "10465:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10467:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10467:16:10"
																			},
																			"nativeSrc": "10467:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10467:18:10"
																		},
																		"nativeSrc": "10467:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10467:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10457:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10457:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10460:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10460:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10454:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10454:2:10"
																},
																"nativeSrc": "10454:10:10",
																"nodeType": "YulFunctionCall",
																"src": "10454:10:10"
															},
															"nativeSrc": "10451:36:10",
															"nodeType": "YulIf",
															"src": "10451:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10303:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10334:1:10",
														"nodeType": "YulTypedName",
														"src": "10334:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10337:1:10",
														"nodeType": "YulTypedName",
														"src": "10337:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10343:3:10",
														"nodeType": "YulTypedName",
														"src": "10343:3:10",
														"type": ""
													}
												],
												"src": "10303:191:10"
											},
											{
												"body": {
													"nativeSrc": "10626:206:10",
													"nodeType": "YulBlock",
													"src": "10626:206:10",
													"statements": [
														{
															"nativeSrc": "10636:26:10",
															"nodeType": "YulAssignment",
															"src": "10636:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10648:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10648:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10659:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10659:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10644:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10644:3:10"
																},
																"nativeSrc": "10644:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10644:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10636:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10636:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10716:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10716:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10729:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10729:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10740:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10740:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10725:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10725:3:10"
																		},
																		"nativeSrc": "10725:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10725:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10672:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10672:43:10"
																},
																"nativeSrc": "10672:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10672:71:10"
															},
															"nativeSrc": "10672:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10672:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10797:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10797:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10810:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10810:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10821:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10821:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10806:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10806:3:10"
																		},
																		"nativeSrc": "10806:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10806:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10753:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10753:43:10"
																},
																"nativeSrc": "10753:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10753:72:10"
															},
															"nativeSrc": "10753:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10753:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "10500:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10590:9:10",
														"nodeType": "YulTypedName",
														"src": "10590:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10602:6:10",
														"nodeType": "YulTypedName",
														"src": "10602:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10610:6:10",
														"nodeType": "YulTypedName",
														"src": "10610:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10621:4:10",
														"nodeType": "YulTypedName",
														"src": "10621:4:10",
														"type": ""
													}
												],
												"src": "10500:332:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only minter\")\n\n    }\n\n    function abi_encode_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610114575f3560e01c806340c10f19116100a0578063a217fddf1161006f578063a217fddf14610304578063a9059cbb14610322578063d539139314610352578063d547741f14610370578063dd62ed3e1461038c57610114565b806340c10f191461026a57806370a082311461028657806391d14854146102b657806395d89b41146102e657610114565b806323b872dd116100e757806323b872dd146101b4578063248a9ca3146101e45780632f2ff15d14610214578063313ce5671461023057806336568abe1461024e57610114565b806301ffc9a71461011857806306fdde0314610148578063095ea7b31461016657806318160ddd14610196575b5f80fd5b610132600480360381019061012d919061117e565b6103bc565b60405161013f91906111c3565b60405180910390f35b610150610435565b60405161015d919061124c565b60405180910390f35b610180600480360381019061017b91906112f9565b6104c5565b60405161018d91906111c3565b60405180910390f35b61019e6104e7565b6040516101ab9190611346565b60405180910390f35b6101ce60048036038101906101c9919061135f565b6104f0565b6040516101db91906111c3565b60405180910390f35b6101fe60048036038101906101f991906113e2565b61051e565b60405161020b919061141c565b60405180910390f35b61022e60048036038101906102299190611435565b61053b565b005b61023861055d565b604051610245919061148e565b60405180910390f35b61026860048036038101906102639190611435565b610565565b005b610284600480360381019061027f91906112f9565b6105e0565b005b6102a0600480360381019061029b91906114a7565b610657565b6040516102ad9190611346565b60405180910390f35b6102d060048036038101906102cb9190611435565b61069c565b6040516102dd91906111c3565b60405180910390f35b6102ee610700565b6040516102fb919061124c565b60405180910390f35b61030c610790565b604051610319919061141c565b60405180910390f35b61033c600480360381019061033791906112f9565b610796565b60405161034991906111c3565b60405180910390f35b61035a6107b8565b604051610367919061141c565b60405180910390f35b61038a60048036038101906103859190611435565b6107dc565b005b6103a660048036038101906103a191906114d2565b6107fe565b6040516103b39190611346565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042e575061042d82610880565b5b9050919050565b6060600380546104449061153d565b80601f01602080910402602001604051908101604052809291908181526020018280546104709061153d565b80156104bb5780601f10610492576101008083540402835291602001916104bb565b820191905f5260205f20905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b5f806104cf6108e9565b90506104dc8185856108f0565b600191505092915050565b5f600254905090565b5f806104fa6108e9565b9050610507858285610902565b610512858585610995565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105448261051e565b61054d81610a85565b6105578383610a99565b50505050565b5f6012905090565b61056d6108e9565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105db8282610b83565b505050565b61060a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63361069c565b610649576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610640906115b7565b60405180910390fd5b6106538282610c6d565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461070f9061153d565b80601f016020809104026020016040519081016040528092919081815260200182805461073b9061153d565b80156107865780601f1061075d57610100808354040283529160200191610786565b820191905f5260205f20905b81548152906001019060200180831161076957829003601f168201915b5050505050905090565b5f801b81565b5f806107a06108e9565b90506107ad818585610995565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107e58261051e565b6107ee81610a85565b6107f88383610b83565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6108fd8383836001610cec565b505050565b5f61090d84846107fe565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561098f5781811015610980578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610977939291906115e4565b60405180910390fd5b61098e84848484035f610cec565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a05575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109fc9190611619565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a75575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a6c9190611619565b60405180910390fd5b610a80838383610ebb565b505050565b610a9681610a916108e9565b6110d4565b50565b5f610aa4838361069c565b610b7957600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610b166108e9565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b7d565b5f90505b92915050565b5f610b8e838361069c565b15610c63575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610c006108e9565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c67565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cdd575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610cd49190611619565b60405180910390fd5b610ce85f8383610ebb565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d5c575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d539190611619565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dcc575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610dc39190611619565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610eb5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610eac9190611346565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f0b578060025f828254610eff919061165f565b92505081905550610fd9565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f94578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f8b939291906115e4565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611020578060025f828254039250508190555061106a565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110c79190611346565b60405180910390a3505050565b6110de828261069c565b6111215780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611118929190611692565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61115d81611129565b8114611167575f80fd5b50565b5f8135905061117881611154565b92915050565b5f6020828403121561119357611192611125565b5b5f6111a08482850161116a565b91505092915050565b5f8115159050919050565b6111bd816111a9565b82525050565b5f6020820190506111d65f8301846111b4565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61121e826111dc565b61122881856111e6565b93506112388185602086016111f6565b61124181611204565b840191505092915050565b5f6020820190508181035f8301526112648184611214565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112958261126c565b9050919050565b6112a58161128b565b81146112af575f80fd5b50565b5f813590506112c08161129c565b92915050565b5f819050919050565b6112d8816112c6565b81146112e2575f80fd5b50565b5f813590506112f3816112cf565b92915050565b5f806040838503121561130f5761130e611125565b5b5f61131c858286016112b2565b925050602061132d858286016112e5565b9150509250929050565b611340816112c6565b82525050565b5f6020820190506113595f830184611337565b92915050565b5f805f6060848603121561137657611375611125565b5b5f611383868287016112b2565b9350506020611394868287016112b2565b92505060406113a5868287016112e5565b9150509250925092565b5f819050919050565b6113c1816113af565b81146113cb575f80fd5b50565b5f813590506113dc816113b8565b92915050565b5f602082840312156113f7576113f6611125565b5b5f611404848285016113ce565b91505092915050565b611416816113af565b82525050565b5f60208201905061142f5f83018461140d565b92915050565b5f806040838503121561144b5761144a611125565b5b5f611458858286016113ce565b9250506020611469858286016112b2565b9150509250929050565b5f60ff82169050919050565b61148881611473565b82525050565b5f6020820190506114a15f83018461147f565b92915050565b5f602082840312156114bc576114bb611125565b5b5f6114c9848285016112b2565b91505092915050565b5f80604083850312156114e8576114e7611125565b5b5f6114f5858286016112b2565b9250506020611506858286016112b2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061155457607f821691505b60208210810361156757611566611510565b5b50919050565b7f4f6e6c79206d696e7465720000000000000000000000000000000000000000005f82015250565b5f6115a1600b836111e6565b91506115ac8261156d565b602082019050919050565b5f6020820190508181035f8301526115ce81611595565b9050919050565b6115de8161128b565b82525050565b5f6060820190506115f75f8301866115d5565b6116046020830185611337565b6116116040830184611337565b949350505050565b5f60208201905061162c5f8301846115d5565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611669826112c6565b9150611674836112c6565b925082820190508082111561168c5761168b611632565b5b92915050565b5f6040820190506116a55f8301856115d5565b6116b2602083018461140d565b939250505056fea2646970667358221220891e769c5a02c02a3d3fb4a7f016a9b9b38fc6cd20884cf992dd1d0dca8b720d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x117E JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0x880 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x153D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x153D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4CF PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP2 DUP6 DUP6 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4FA PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP6 DUP3 DUP6 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x512 DUP6 DUP6 DUP6 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x544 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x557 DUP4 DUP4 PUSH2 0xA99 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH2 0x8E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 DUP3 PUSH2 0xB83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x60A PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x69C JUMP JUMPDEST PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP1 PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x653 DUP3 DUP3 PUSH2 0xC6D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x70F SWAP1 PUSH2 0x153D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x73B SWAP1 PUSH2 0x153D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x786 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x75D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x786 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x769 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7A0 PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AD DUP2 DUP6 DUP6 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7E5 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x7EE DUP2 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x7F8 DUP4 DUP4 PUSH2 0xB83 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8FD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x90D DUP5 DUP5 PUSH2 0x7FE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x98F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x980 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCEC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA05 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA75 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6C SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA80 DUP4 DUP4 DUP4 PUSH2 0xEBB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA96 DUP2 PUSH2 0xA91 PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x10D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xAA4 DUP4 DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0xB79 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB16 PUSH2 0x8E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB7D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB8E DUP4 DUP4 PUSH2 0x69C JUMP JUMPDEST ISZERO PUSH2 0xC63 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC00 PUSH2 0x8E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC67 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE8 PUSH0 DUP4 DUP4 PUSH2 0xEBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC3 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xEB5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEAC SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF0B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x165F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFD9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF94 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1020 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x106A JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10DE DUP3 DUP3 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1121 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1118 SWAP3 SWAP2 SWAP1 PUSH2 0x1692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115D DUP2 PUSH2 0x1129 JUMP JUMPDEST DUP2 EQ PUSH2 0x1167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1178 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1192 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11A0 DUP5 DUP3 DUP6 ADD PUSH2 0x116A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BD DUP2 PUSH2 0x11A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x11B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x121E DUP3 PUSH2 0x11DC JUMP JUMPDEST PUSH2 0x1228 DUP2 DUP6 PUSH2 0x11E6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1238 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x1241 DUP2 PUSH2 0x1204 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1264 DUP2 DUP5 PUSH2 0x1214 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1295 DUP3 PUSH2 0x126C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A5 DUP2 PUSH2 0x128B JUMP JUMPDEST DUP2 EQ PUSH2 0x12AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12C0 DUP2 PUSH2 0x129C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D8 DUP2 PUSH2 0x12C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x12E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F3 DUP2 PUSH2 0x12CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130F JUMPI PUSH2 0x130E PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x131C DUP6 DUP3 DUP7 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x132D DUP6 DUP3 DUP7 ADD PUSH2 0x12E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1340 DUP2 PUSH2 0x12C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1359 PUSH0 DUP4 ADD DUP5 PUSH2 0x1337 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1376 JUMPI PUSH2 0x1375 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1383 DUP7 DUP3 DUP8 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1394 DUP7 DUP3 DUP8 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13A5 DUP7 DUP3 DUP8 ADD PUSH2 0x12E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C1 DUP2 PUSH2 0x13AF JUMP JUMPDEST DUP2 EQ PUSH2 0x13CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DC DUP2 PUSH2 0x13B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F7 JUMPI PUSH2 0x13F6 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1404 DUP5 DUP3 DUP6 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1416 DUP2 PUSH2 0x13AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142F PUSH0 DUP4 ADD DUP5 PUSH2 0x140D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144B JUMPI PUSH2 0x144A PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1458 DUP6 DUP3 DUP7 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1469 DUP6 DUP3 DUP7 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1488 DUP2 PUSH2 0x1473 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x147F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14BC JUMPI PUSH2 0x14BB PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14C9 DUP5 DUP3 DUP6 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E8 JUMPI PUSH2 0x14E7 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14F5 DUP6 DUP3 DUP7 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1506 DUP6 DUP3 DUP7 ADD PUSH2 0x12B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1554 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1567 JUMPI PUSH2 0x1566 PUSH2 0x1510 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206D696E746572000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15A1 PUSH1 0xB DUP4 PUSH2 0x11E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AC DUP3 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15CE DUP2 PUSH2 0x1595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DE DUP2 PUSH2 0x128B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15F7 PUSH0 DUP4 ADD DUP7 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x1604 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x1611 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1337 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162C PUSH0 DUP4 ADD DUP5 PUSH2 0x15D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1669 DUP3 PUSH2 0x12C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1674 DUP4 PUSH2 0x12C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x168C JUMPI PUSH2 0x168B PUSH2 0x1632 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16A5 PUSH0 DUP4 ADD DUP6 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x16B2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x140D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0x1E PUSH23 0x9C5A02C02A3D3FB4A7F016A9B9B38FC6CD20884CF992DD SAR 0xD 0xCA DUP12 PUSH19 0xD64736F6C634300081A003300000000000000 ",
							"sourceMap": "293:388:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;530:149:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;338:62:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:1;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1779:89:4:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3810:120:1:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2707:82:4:-;2756:5;2780:2;2773:9;;2707:82;:::o;5328:245:1:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;530:149:0:-;597:32;376:24;618:10;597:7;:32::i;:::-;589:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;655:17;661:2;665:6;655:5;:17::i;:::-;530:149;;:::o;3004:116:4:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2854:136:1:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1981:93:4:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2187:49:1:-;2232:4;2187:49;;;:::o;3315:178:4:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;338:62:0:-;376:24;338:62;:::o;4642:138:1:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3551:140:4:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;763:146:8:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:4:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3199:103:1:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7458:208:4:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;3432:197:1:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:10:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:619::-;4525:6;4533;4541;4590:2;4578:9;4569:7;4565:23;4561:32;4558:119;;;4596:79;;:::i;:::-;4558:119;4716:1;4741:53;4786:7;4777:6;4766:9;4762:22;4741:53;:::i;:::-;4731:63;;4687:117;4843:2;4869:53;4914:7;4905:6;4894:9;4890:22;4869:53;:::i;:::-;4859:63;;4814:118;4971:2;4997:53;5042:7;5033:6;5022:9;5018:22;4997:53;:::i;:::-;4987:63;;4942:118;4448:619;;;;;:::o;5073:77::-;5110:7;5139:5;5128:16;;5073:77;;;:::o;5156:122::-;5229:24;5247:5;5229:24;:::i;:::-;5222:5;5219:35;5209:63;;5268:1;5265;5258:12;5209:63;5156:122;:::o;5284:139::-;5330:5;5368:6;5355:20;5346:29;;5384:33;5411:5;5384:33;:::i;:::-;5284:139;;;;:::o;5429:329::-;5488:6;5537:2;5525:9;5516:7;5512:23;5508:32;5505:119;;;5543:79;;:::i;:::-;5505:119;5663:1;5688:53;5733:7;5724:6;5713:9;5709:22;5688:53;:::i;:::-;5678:63;;5634:117;5429:329;;;;:::o;5764:118::-;5851:24;5869:5;5851:24;:::i;:::-;5846:3;5839:37;5764:118;;:::o;5888:222::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6032:71;6100:1;6089:9;6085:17;6076:6;6032:71;:::i;:::-;5888:222;;;;:::o;6116:474::-;6184:6;6192;6241:2;6229:9;6220:7;6216:23;6212:32;6209:119;;;6247:79;;:::i;:::-;6209:119;6367:1;6392:53;6437:7;6428:6;6417:9;6413:22;6392:53;:::i;:::-;6382:63;;6338:117;6494:2;6520:53;6565:7;6556:6;6545:9;6541:22;6520:53;:::i;:::-;6510:63;;6465:118;6116:474;;;;;:::o;6596:86::-;6631:7;6671:4;6664:5;6660:16;6649:27;;6596:86;;;:::o;6688:112::-;6771:22;6787:5;6771:22;:::i;:::-;6766:3;6759:35;6688:112;;:::o;6806:214::-;6895:4;6933:2;6922:9;6918:18;6910:26;;6946:67;7010:1;6999:9;6995:17;6986:6;6946:67;:::i;:::-;6806:214;;;;:::o;7026:329::-;7085:6;7134:2;7122:9;7113:7;7109:23;7105:32;7102:119;;;7140:79;;:::i;:::-;7102:119;7260:1;7285:53;7330:7;7321:6;7310:9;7306:22;7285:53;:::i;:::-;7275:63;;7231:117;7026:329;;;;:::o;7361:474::-;7429:6;7437;7486:2;7474:9;7465:7;7461:23;7457:32;7454:119;;;7492:79;;:::i;:::-;7454:119;7612:1;7637:53;7682:7;7673:6;7662:9;7658:22;7637:53;:::i;:::-;7627:63;;7583:117;7739:2;7765:53;7810:7;7801:6;7790:9;7786:22;7765:53;:::i;:::-;7755:63;;7710:118;7361:474;;;;;:::o;7841:180::-;7889:77;7886:1;7879:88;7986:4;7983:1;7976:15;8010:4;8007:1;8000:15;8027:320;8071:6;8108:1;8102:4;8098:12;8088:22;;8155:1;8149:4;8145:12;8176:18;8166:81;;8232:4;8224:6;8220:17;8210:27;;8166:81;8294:2;8286:6;8283:14;8263:18;8260:38;8257:84;;8313:18;;:::i;:::-;8257:84;8078:269;8027:320;;;:::o;8353:161::-;8493:13;8489:1;8481:6;8477:14;8470:37;8353:161;:::o;8520:366::-;8662:3;8683:67;8747:2;8742:3;8683:67;:::i;:::-;8676:74;;8759:93;8848:3;8759:93;:::i;:::-;8877:2;8872:3;8868:12;8861:19;;8520:366;;;:::o;8892:419::-;9058:4;9096:2;9085:9;9081:18;9073:26;;9145:9;9139:4;9135:20;9131:1;9120:9;9116:17;9109:47;9173:131;9299:4;9173:131;:::i;:::-;9165:139;;8892:419;;;:::o;9317:118::-;9404:24;9422:5;9404:24;:::i;:::-;9399:3;9392:37;9317:118;;:::o;9441:442::-;9590:4;9628:2;9617:9;9613:18;9605:26;;9641:71;9709:1;9698:9;9694:17;9685:6;9641:71;:::i;:::-;9722:72;9790:2;9779:9;9775:18;9766:6;9722:72;:::i;:::-;9804;9872:2;9861:9;9857:18;9848:6;9804:72;:::i;:::-;9441:442;;;;;;:::o;9889:222::-;9982:4;10020:2;10009:9;10005:18;9997:26;;10033:71;10101:1;10090:9;10086:17;10077:6;10033:71;:::i;:::-;9889:222;;;;:::o;10117:180::-;10165:77;10162:1;10155:88;10262:4;10259:1;10252:15;10286:4;10283:1;10276:15;10303:191;10343:3;10362:20;10380:1;10362:20;:::i;:::-;10357:25;;10396:20;10414:1;10396:20;:::i;:::-;10391:25;;10439:1;10436;10432:9;10425:16;;10460:3;10457:1;10454:10;10451:36;;;10467:18;;:::i;:::-;10451:36;10303:191;;;;:::o;10500:332::-;10621:4;10659:2;10648:9;10644:18;10636:26;;10672:71;10740:1;10729:9;10725:17;10716:6;10672:71;:::i;:::-;10753:72;10821:2;10810:9;10806:18;10797:6;10753:72;:::i;:::-;10500:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1174200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "352",
								"MINTER_ROLE()": "391",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"decimals()": "427",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 293,
									"end": 681,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 293,
									"end": 681,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 293,
									"end": 681,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 407,
									"end": 525,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 407,
									"end": 525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 407,
									"end": 525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 407,
									"end": 525,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 407,
									"end": 525,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 407,
									"end": 525,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 407,
									"end": 525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 407,
									"end": 525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "426C6F636B636861696E20556E69666563616620546F6B656E00000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "4255540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 487,
									"end": 518,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 376,
									"end": 400,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 511,
									"end": 517,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 487,
									"end": 497,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 487,
									"end": 497,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 487,
									"end": 497,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 487,
									"end": 518,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 487,
									"end": 518,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 487,
									"end": 518,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 487,
									"end": 518,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 487,
									"end": 518,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 487,
									"end": 518,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 407,
									"end": 525,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 293,
									"end": 681,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 293,
									"end": 681,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 293,
									"end": 681,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 293,
									"end": 681,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 293,
									"end": 681,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 293,
									"end": 681,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 293,
									"end": 681,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 293,
									"end": 681,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 681,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 293,
									"end": 681,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 681,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220891e769c5a02c02a3d3fb4a7f016a9b9b38fc6cd20884cf992dd1d0dca8b720d64736f6c634300081a0033",
									".code": [
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "D5391393"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 681,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 530,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 530,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 530,
											"end": 679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 530,
											"end": 679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 530,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 530,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 530,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 530,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 338,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 338,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 338,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 338,
											"end": 400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 338,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 338,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 338,
											"end": 400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 338,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 530,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 597,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 618,
											"end": 628,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 597,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 597,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 597,
											"end": 629,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 597,
											"end": 629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 589,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 589,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 589,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 589,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 589,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 589,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 589,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 661,
											"end": 663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 655,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 655,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 655,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 338,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 338,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 338,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 338,
											"end": 400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4596,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4741,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4869,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 4997,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5229,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5254,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5258,
											"end": 5270,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5384,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5523,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5508,
											"end": 5540,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5543,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5709,
											"end": 5731,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 5688,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5634,
											"end": 5751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5851,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5764,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6017,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 6032,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5888,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6238,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6247,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 6437,
											"end": 6444,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6413,
											"end": 6435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 6392,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 6520,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6465,
											"end": 6583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6675,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6660,
											"end": 6676,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 6771,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6759,
											"end": 6794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6995,
											"end": 7012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 6946,
											"end": 7013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 7020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7136,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7113,
											"end": 7120,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7109,
											"end": 7132,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7137,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 7140,
											"end": 7219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7306,
											"end": 7328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7285,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7231,
											"end": 7348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7026,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7483,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7465,
											"end": 7472,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7461,
											"end": 7484,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7457,
											"end": 7489,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 7492,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7658,
											"end": 7680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7637,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 7810,
											"end": 7817,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7801,
											"end": 7807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7808,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7765,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7710,
											"end": 7828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7889,
											"end": 7966,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7886,
											"end": 7887,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7967,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7986,
											"end": 7990,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8010,
											"end": 8014,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8007,
											"end": 8008,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8015,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8071,
											"end": 8077,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8102,
											"end": 8106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8149,
											"end": 8153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8145,
											"end": 8157,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8294,
											"end": 8296,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8286,
											"end": 8292,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8297,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8298,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 8313,
											"end": 8331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8078,
											"end": 8347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8353,
											"end": 8514,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 8353,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8493,
											"end": 8506,
											"name": "PUSH",
											"source": 10,
											"value": "4F6E6C79206D696E746572000000000000000000000000000000000000000000"
										},
										{
											"begin": 8489,
											"end": 8490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8477,
											"end": 8491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8470,
											"end": 8507,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8353,
											"end": 8514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8353,
											"end": 8514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8520,
											"end": 8886,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 8520,
											"end": 8886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8662,
											"end": 8665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8683,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 8747,
											"end": 8749,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 8742,
											"end": 8745,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 8683,
											"end": 8750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8750,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 8683,
											"end": 8750,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 8750,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 8750,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8759,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 8848,
											"end": 8851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8759,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 8759,
											"end": 8852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8759,
											"end": 8852,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 8759,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8877,
											"end": 8879,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8872,
											"end": 8875,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 8880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8861,
											"end": 8880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8861,
											"end": 8880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8520,
											"end": 8886,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8520,
											"end": 8886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8520,
											"end": 8886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8520,
											"end": 8886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 9311,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 8892,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9058,
											"end": 9062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9098,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9085,
											"end": 9094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9145,
											"end": 9154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9139,
											"end": 9143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9155,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9131,
											"end": 9132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9120,
											"end": 9129,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9116,
											"end": 9133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9109,
											"end": 9156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9173,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 9299,
											"end": 9303,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9173,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 9173,
											"end": 9304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9173,
											"end": 9304,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 9173,
											"end": 9304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9304,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 9311,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 9311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 9311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 9311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9317,
											"end": 9435,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 9317,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9422,
											"end": 9427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 9404,
											"end": 9428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9428,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9404,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9399,
											"end": 9402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9392,
											"end": 9429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9317,
											"end": 9435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9317,
											"end": 9435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9317,
											"end": 9435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9441,
											"end": 9883,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 9441,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9590,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9628,
											"end": 9630,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9617,
											"end": 9626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 9709,
											"end": 9710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9698,
											"end": 9707,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9694,
											"end": 9711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9685,
											"end": 9691,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 9641,
											"end": 9712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9722,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 9790,
											"end": 9792,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9779,
											"end": 9788,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9775,
											"end": 9793,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9766,
											"end": 9772,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9722,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 9722,
											"end": 9794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9722,
											"end": 9794,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 9722,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 9872,
											"end": 9874,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9861,
											"end": 9870,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9848,
											"end": 9854,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 9804,
											"end": 9876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9441,
											"end": 9883,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9441,
											"end": 9883,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9441,
											"end": 9883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9441,
											"end": 9883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9441,
											"end": 9883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9441,
											"end": 9883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9441,
											"end": 9883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10111,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 9889,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9982,
											"end": 9986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10022,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10009,
											"end": 10018,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10005,
											"end": 10023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9997,
											"end": 10023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9997,
											"end": 10023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10033,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 10101,
											"end": 10102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10090,
											"end": 10099,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10086,
											"end": 10103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10077,
											"end": 10083,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10033,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 10033,
											"end": 10104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10033,
											"end": 10104,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 10033,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10111,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10297,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 10117,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10165,
											"end": 10242,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10162,
											"end": 10163,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10155,
											"end": 10243,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10262,
											"end": 10266,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 10259,
											"end": 10260,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10252,
											"end": 10267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10286,
											"end": 10290,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10283,
											"end": 10284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10343,
											"end": 10346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 10380,
											"end": 10381,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 10362,
											"end": 10382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10382,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 10414,
											"end": 10415,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 10396,
											"end": 10416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10416,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 10396,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10391,
											"end": 10416,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10391,
											"end": 10416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10432,
											"end": 10441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 10441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 10441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10460,
											"end": 10463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10458,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10454,
											"end": 10464,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 10467,
											"end": 10485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10832,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 10500,
											"end": 10832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10621,
											"end": 10625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10659,
											"end": 10661,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10657,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10644,
											"end": 10662,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10636,
											"end": 10662,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10636,
											"end": 10662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 10740,
											"end": 10741,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10729,
											"end": 10738,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10725,
											"end": 10742,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10716,
											"end": 10722,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 10672,
											"end": 10743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10743,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 10672,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10753,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 10821,
											"end": 10823,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10810,
											"end": 10819,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10797,
											"end": 10803,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10753,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10753,
											"end": 10825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10753,
											"end": 10825,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 10753,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10832,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"contracts/OpenZeppelin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpenZeppelin.sol\":\"Token\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OpenZeppelin.sol\":{\"keccak256\":\"0x951580c6d1721aa4c6dfe309f92299ccabc62e70e655a2200d34966ca48ed398\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7dc076ea0310f330c1eb54e0099dc6b02e8c4a080ef54ff35f24a55b0b56b3de\",\"dweb:/ipfs/QmYbCmnz7vQh1sfiRACDvvRnntsJ57xotfPd94DXy71snP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd7c9f6f5f3386c29eee9321197fd83ac735c9c3c21431065f0e8e10fe3d0739c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://096db22b340a43c39b39383ca644dbe0a50c7984fe9cec6a0cf4c2ac8b985dd7\",\"dweb:/ipfs/QmNRjJL4pHyPd2eEbtdxhCTMK1xfSScGZ2RvEggnVdfrDN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 589,
								"contract": "contracts/OpenZeppelin.sol:Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 595,
								"contract": "contracts/OpenZeppelin.sol:Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 597,
								"contract": "contracts/OpenZeppelin.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 599,
								"contract": "contracts/OpenZeppelin.sol:Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 601,
								"contract": "contracts/OpenZeppelin.sol:Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 77,
								"contract": "contracts/OpenZeppelin.sol:Token",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)72_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)72_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)72_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)72_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 69,
										"contract": "contracts/OpenZeppelin.sol:Token",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 71,
										"contract": "contracts/OpenZeppelin.sol:Token",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 77,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)72_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)72_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)72_storage"
							},
							"t_struct(RoleData)72_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 69,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 71,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd7c9f6f5f3386c29eee9321197fd83ac735c9c3c21431065f0e8e10fe3d0739c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://096db22b340a43c39b39383ca644dbe0a50c7984fe9cec6a0cf4c2ac8b985dd7\",\"dweb:/ipfs/QmNRjJL4pHyPd2eEbtdxhCTMK1xfSScGZ2RvEggnVdfrDN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 589,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 595,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 597,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 599,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 601,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/OpenZeppelin.sol": {
				"ast": {
					"absolutePath": "contracts/OpenZeppelin.sol",
					"exportedSymbols": {
						"AccessControl": [
							346
						],
						"Context": [
							1215
						],
						"ERC165": [
							1239
						],
						"ERC20": [
							1081
						],
						"IAccessControl": [
							429
						],
						"IERC20": [
							1159
						],
						"IERC20Errors": [
							471
						],
						"IERC20Metadata": [
							1185
						],
						"Token": [
							50
						]
					},
					"id": 51,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 51,
							"sourceUnit": 1082,
							"src": "71:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 51,
							"sourceUnit": 347,
							"src": "180:111:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC20",
										"nameLocations": [
											"311:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1081,
										"src": "311:5:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "311:5:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "AccessControl",
										"nameLocations": [
											"318:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 346,
										"src": "318:13:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "318:13:0"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 50,
							"linearizedBaseContracts": [
								50,
								346,
								1239,
								1251,
								429,
								1081,
								471,
								1185,
								1159,
								1215
							],
							"name": "Token",
							"nameLocation": "302:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 12,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "362:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 50,
									"src": "338:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 8,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "338:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 10,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "386:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 9,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "376:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "376:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "477:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 22,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "498:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 23,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "511:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 21,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "487:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "487:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "487:31:0"
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "426c6f636b636861696e20556e69666563616620546f6b656e",
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "441:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_12f489342f618ad96bdd290b72d72a09e19b14d938ba8f69b5c1a2281e64390a",
														"typeString": "literal_string \"Blockchain Unifecaf Token\""
													},
													"value": "Blockchain Unifecaf Token"
												},
												{
													"hexValue": "425554",
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_873306276fd894e994d1c8b75bb74dd0ed052930a5071959df5aee5d0f5c59a3",
														"typeString": "literal_string \"BUT\""
													},
													"value": "BUT"
												}
											],
											"id": 19,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 16,
												"name": "ERC20",
												"nameLocations": [
													"435:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1081,
												"src": "435:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "435:41:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "427:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "419:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:16:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:0:0"
									},
									"scope": 50,
									"src": "407:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "579:100:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 36,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "605:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 37,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "618:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "622:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "618:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 35,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "597:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "597:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206d696e746572",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "631:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
																"typeString": "literal_string \"Only minter\""
															},
															"value": "Only minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
																"typeString": "literal_string \"Only minter\""
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "589:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "589:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 44,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "661:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 45,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "665:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 43,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "655:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "655:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "655:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "539:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "552:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "544:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "564:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "556:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:28:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "579:0:0"
									},
									"scope": 50,
									"src": "530:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 51,
							"src": "293:388:0",
							"usedErrors": [
								356,
								359,
								441,
								446,
								451,
								460,
								465,
								470
							],
							"usedEvents": [
								368,
								377,
								386,
								1093,
								1102
							]
						}
					],
					"src": "37:647:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							346
						],
						"Context": [
							1215
						],
						"ERC165": [
							1239
						],
						"IAccessControl": [
							429
						]
					},
					"id": 347,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 52,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 54,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 347,
							"sourceUnit": 430,
							"src": "134:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 53,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 429,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 56,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 347,
							"sourceUnit": 1216,
							"src": "187:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 55,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1215,
										"src": "195:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 58,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 347,
							"sourceUnit": 1240,
							"src": "233:57:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 57,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1239,
										"src": "241:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 60,
										"name": "Context",
										"nameLocations": [
											"1988:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1215,
										"src": "1988:7:1"
									},
									"id": 61,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:1"
								},
								{
									"baseName": {
										"id": 62,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 429,
										"src": "1997:14:1"
									},
									"id": 63,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:1"
								},
								{
									"baseName": {
										"id": 64,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1239,
										"src": "2013:6:1"
									},
									"id": 65,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 59,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 346,
							"linearizedBaseContracts": [
								346,
								1239,
								1251,
								429,
								1215
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 72,
									"members": [
										{
											"constant": false,
											"id": 69,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 72,
											"src": "2052:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 68,
												"keyName": "account",
												"keyNameLocation": "2068:7:1",
												"keyType": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 67,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 71,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 72,
											"src": "2102:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 70,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:1",
									"nodeType": "StructDefinition",
									"scope": 346,
									"src": "2026:100:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 77,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 346,
									"src": "2132:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$72_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 76,
										"keyName": "role",
										"keyNameLocation": "2148:4:1",
										"keyType": {
											"id": 73,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$72_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 75,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 74,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 72,
												"src": "2156:8:1"
											},
											"referencedDeclaration": 72,
											"src": "2156:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$72_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 80,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 346,
									"src": "2187:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 78,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 79,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2454:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2475:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															144,
															165
														],
														"referencedDeclaration": 144,
														"src": "2464:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:1"
											},
											{
												"id": 89,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 91,
									"name": "onlyRole",
									"nameLocation": "2431:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2440:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:1"
									},
									"src": "2422:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1238
									],
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "2656:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 100,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2673:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 102,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "2693:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$429_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$429_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 101,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$429",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 108,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "2748:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 106,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$346_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1238,
															"src": "2724:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 99,
												"id": 111,
												"nodeType": "Return",
												"src": "2666:94:1"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 96,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:1"
									},
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2592:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 93,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2650:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 97,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:1"
									},
									"scope": 346,
									"src": "2565:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										396
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2937:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 123,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2954:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$72_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 125,
															"indexExpression": {
																"id": 124,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$72_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 69,
														"src": "2954:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 128,
													"indexExpression": {
														"id": 127,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2975:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 122,
												"id": 129,
												"nodeType": "Return",
												"src": "2947:36:1"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2871:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2885:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:1"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2931:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:1"
									},
									"scope": 346,
									"src": "2854:136:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "3255:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "3276:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 139,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "3282:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 137,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															144,
															165
														],
														"referencedDeclaration": 165,
														"src": "3265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "3219:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 346,
									"src": "3199:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "3505:124:1",
										"statements": [
											{
												"condition": {
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 153,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "3528:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 154,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "3534:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 152,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 163,
												"nodeType": "IfStatement",
												"src": "3515:108:1",
												"trueBody": {
													"id": 162,
													"nodeType": "Block",
													"src": "3544:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 158,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "3598:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 159,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "3607:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 157,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "3565:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 161,
															"nodeType": "RevertStatement",
															"src": "3558:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "3452:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "3466:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:1"
									},
									"scope": 346,
									"src": "3432:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										404
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "3884:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 173,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3901:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$72_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 175,
														"indexExpression": {
															"id": 174,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "3908:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$72_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 71,
													"src": "3901:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 172,
												"id": 177,
												"nodeType": "Return",
												"src": "3894:29:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3832:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 167,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3875:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 170,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:1"
									},
									"scope": 346,
									"src": "3810:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										412
									],
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "4320:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "4341:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 194,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "4347:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 192,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "4330:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 188,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "4313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 187,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "4300:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 190,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 186,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 91,
												"src": "4291:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "4245:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 181,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "4259:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:1"
									},
									"scope": 346,
									"src": "4226:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										420
									],
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "4737:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "4759:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "4765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 211,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "4747:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:1"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 207,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "4730:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 206,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "4717:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 205,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 91,
												"src": "4708:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4662:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 200,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4676:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:1"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:1"
									},
									"scope": 346,
									"src": "4642:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										428
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "5407:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 225,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "5421:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 226,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "5443:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 233,
												"nodeType": "IfStatement",
												"src": "5417:102:1",
												"trueBody": {
													"id": 232,
													"nodeType": "Block",
													"src": "5457:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 229,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "5478:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 231,
															"nodeType": "RevertStatement",
															"src": "5471:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 235,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "5541:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 236,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5547:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 234,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "5529:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:1"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5364:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:1"
									},
									"scope": 346,
									"src": "5328:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "5771:174:1",
										"statements": [
											{
												"assignments": [
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "5781:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 248,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "5822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 250,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "5809:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:1"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 254,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "5837:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$72_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 256,
															"indexExpression": {
																"id": 255,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "5844:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$72_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 71,
														"src": "5837:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "5862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "5903:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "5909:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "5928:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "5886:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "5881:57:1"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "5721:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "5735:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:1"
									},
									"scope": 346,
									"src": "5698:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "6262:233:1",
										"statements": [
											{
												"condition": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 279,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "6285:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 280,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "6291:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 278,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "6277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "6452:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 277,
															"id": 303,
															"nodeType": "Return",
															"src": "6466:12:1"
														}
													]
												},
												"id": 305,
												"nodeType": "IfStatement",
												"src": "6272:217:1",
												"trueBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "6301:145:1",
													"statements": [
														{
															"expression": {
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 283,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 77,
																				"src": "6315:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$72_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 285,
																			"indexExpression": {
																				"id": 284,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "6322:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$72_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "6315:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 288,
																	"indexExpression": {
																		"id": 287,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "6336:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 293,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "6382:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 294,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "6388:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 295,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "6397:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 292,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "6370:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "6365:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 277,
															"id": 300,
															"nodeType": "Return",
															"src": "6424:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "6199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "6213:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "6256:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:1"
									},
									"scope": 346,
									"src": "6179:316:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "6814:233:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 318,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "6836:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 319,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "6842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 317,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "6828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "7004:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 316,
															"id": 341,
															"nodeType": "Return",
															"src": "7018:12:1"
														}
													]
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "6824:217:1",
												"trueBody": {
													"id": 339,
													"nodeType": "Block",
													"src": "6852:146:1",
													"statements": [
														{
															"expression": {
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 321,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 77,
																				"src": "6866:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$72_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 323,
																			"indexExpression": {
																				"id": 322,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 310,
																				"src": "6873:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$72_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "6866:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 326,
																	"indexExpression": {
																		"id": 325,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "6887:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 329,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 331,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "6934:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 332,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "6940:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 333,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "6949:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 330,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "6922:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 336,
															"nodeType": "EmitStatement",
															"src": "6917:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 316,
															"id": 338,
															"nodeType": "Return",
															"src": "6976:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:1",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "6751:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 309,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "6765:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "6808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:1"
									},
									"scope": 346,
									"src": "6730:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 347,
							"src": "1953:5096:1",
							"usedErrors": [
								356,
								359
							],
							"usedEvents": [
								368,
								377,
								386
							]
						}
					],
					"src": "108:6942:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							429
						]
					},
					"id": 430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 348,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 349,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:2",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 429,
							"linearizedBaseContracts": [
								429
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:2",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 356,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "357:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "374:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 353,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:2"
									},
									"src": "318:76:2"
								},
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:2",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 359,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:2"
									},
									"src": "553:37:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 368,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "878:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "900:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "935:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:2"
									},
									"src": "855:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 377,
									"name": "RoleGranted",
									"nameLocation": "1277:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "1289:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 370,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "1311:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "1336:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:2"
									},
									"src": "1271:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 386,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1664:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 379,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1686:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1711:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:2"
									},
									"src": "1646:89:2"
								},
								{
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "1839:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 388,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "1853:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "1893:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:2"
									},
									"scope": 429,
									"src": "1822:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2116:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 398,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2153:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 401,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:2"
									},
									"scope": 429,
									"src": "2094:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2431:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 406,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2445:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:2"
									},
									"scope": 429,
									"src": "2412:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2725:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 414,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2739:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:2"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:2"
									},
									"scope": 429,
									"src": "2705:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "3289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 422,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "3303:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:2"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:2"
									},
									"scope": 429,
									"src": "3267:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 430,
							"src": "226:3116:2",
							"usedErrors": [
								356,
								359
							],
							"usedEvents": [
								368,
								377,
								386
							]
						}
					],
					"src": "109:3234:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							566
						],
						"IERC20Errors": [
							471
						],
						"IERC721Errors": [
							519
						]
					},
					"id": 567,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 431,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 432,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:3",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 471,
							"linearizedBaseContracts": [
								471
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 441,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "654:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "687:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:3"
									},
									"src": "623:80:3"
								},
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 446,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "891:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:3"
									},
									"src": "866:41:3"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 451,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1104:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:3"
									},
									"src": "1077:45:3"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 460,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1511:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1528:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:3"
									},
									"src": "1478:85:3"
								},
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 465,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:3"
									},
									"src": "1748:45:3"
								},
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 470,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:3"
									},
									"src": "1999:43:3"
								}
							],
							"scope": 567,
							"src": "280:1764:3",
							"usedErrors": [
								441,
								446,
								451,
								460,
								465,
								470
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 472,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:3",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 477,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2469:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:3"
									},
									"src": "2444:40:3"
								},
								{
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 482,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:3"
									},
									"src": "2627:46:3"
								},
								{
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 491,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3016:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:3"
									},
									"src": "2973:75:3"
								},
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 496,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:3"
									},
									"src": "3211:42:3"
								},
								{
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 501,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "3451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:3"
									},
									"src": "3423:46:3"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 508,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3760:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3778:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:3"
									},
									"src": "3727:68:3"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 513,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4008:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:3"
									},
									"src": "3980:46:3"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 518,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "4262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:3"
									},
									"src": "4234:46:3"
								}
							],
							"scope": 567,
							"src": "2190:2092:3",
							"usedErrors": [
								477,
								482,
								491,
								496,
								501,
								508,
								513,
								518
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 520,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:3",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 566,
							"linearizedBaseContracts": [
								566
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 531,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "4860:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "4876:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "4893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "4909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:3"
									},
									"src": "4827:99:3"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 536,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:3"
									},
									"src": "5089:43:3"
								},
								{
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 541,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5331:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:3"
									},
									"src": "5302:47:3"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 548,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5651:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5669:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:3"
									},
									"src": "5616:68:3"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 553,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5898:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:3"
									},
									"src": "5869:47:3"
								},
								{
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 558,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "6153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:3"
									},
									"src": "6124:47:3"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 565,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "6494:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "6513:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:3"
									},
									"src": "6462:73:3"
								}
							],
							"scope": 567,
							"src": "4430:2107:3",
							"usedErrors": [
								531,
								536,
								541,
								548,
								553,
								558,
								565
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1215
						],
						"ERC20": [
							1081
						],
						"IERC20": [
							1159
						],
						"IERC20Errors": [
							471
						],
						"IERC20Metadata": [
							1185
						]
					},
					"id": 1082,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 568,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 570,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 1160,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 569,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1159,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 572,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 1186,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 571,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1185,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 574,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 1216,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 573,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1215,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 567,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 575,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 471,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 578,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1215,
										"src": "1133:7:4"
									},
									"id": 579,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 580,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1159,
										"src": "1142:6:4"
									},
									"id": 581,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 582,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1185,
										"src": "1150:14:4"
									},
									"id": 583,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 584,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 471,
										"src": "1166:12:4"
									},
									"id": 585,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 577,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1081,
							"linearizedBaseContracts": [
								1081,
								471,
								1185,
								1159,
								1215
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 589,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1081,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 588,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 586,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 587,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 595,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1081,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 594,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 590,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 593,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 591,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 592,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 597,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1081,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 596,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 599,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1081,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 598,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 601,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1081,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 600,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 609,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 610,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 613,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 618,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 603,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 605,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 1081,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1172
									],
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 624,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 599,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 623,
												"id": 625,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 1081,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1178
									],
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 633,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 601,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 632,
												"id": 634,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 630,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 1081,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1184
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 641,
												"id": 643,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 639,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 1081,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1108
									],
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 651,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 597,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 650,
												"id": 652,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 1081,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1116
									],
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 662,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 664,
													"indexExpression": {
														"id": 663,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 661,
												"id": 665,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 1081,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1126
									],
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 690,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 677,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 681,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 679,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 676,
												"id": 689,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 1081,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1136
									],
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 701,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 703,
														"indexExpression": {
															"id": 702,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 705,
													"indexExpression": {
														"id": 704,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 700,
												"id": 706,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 1081,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1146
									],
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 718,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 720,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 724,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 723,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															1032
														],
														"referencedDeclaration": 972,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 717,
												"id": 730,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 1081,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1158
									],
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													745
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 744,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 748,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 746,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 750,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 749,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 756,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 755,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 743,
												"id": 762,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 1081,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 774,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 775,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 788,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 787,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 781,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 780,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 786,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 789,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 790,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 803,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 802,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 796,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 795,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 801,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 804,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 1081,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 821,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 822,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																833
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 833,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 858,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 832,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 837,
															"initialValue": {
																"baseExpression": {
																	"id": 834,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 836,
																"indexExpression": {
																	"id": 835,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 838,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 839,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 848,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 847,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 842,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 843,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 833,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 844,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 841,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 441,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 846,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 857,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 849,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 851,
																			"indexExpression": {
																				"id": 850,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 852,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 833,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 853,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 856,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 831,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 827,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 828,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 830,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 860,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 861,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 878,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 872,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 874,
																			"indexExpression": {
																				"id": 873,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 816,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 875,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 818,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 877,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 870,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 866,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 597,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 867,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 818,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 869,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 882,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 1081,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 896,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 897,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 903,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 902,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 908,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 912,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 911,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 1081,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 929,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 930,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 943,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 942,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 936,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 935,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 941,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 945,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 946,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 944,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 1081,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 964,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															1032
														],
														"referencedDeclaration": 1032,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 1081,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 985,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 991,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 990,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 996,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 999,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1000,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1013,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1006,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1005,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1011,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1014,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1017,
															"indexExpression": {
																"id": 1015,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1018,
														"indexExpression": {
															"id": 1016,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1019,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 1022,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 981,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1024,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1025,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1026,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1023,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 980,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 1081,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "10504:387:4",
										"statements": [
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1042,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1048,
												"initialValue": {
													"arguments": [
														{
															"id": 1045,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1044,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1049,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1051,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1050,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "10576:309:4",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "10618:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1056,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "10636:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1057,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "10655:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1066,
															"nodeType": "IfStatement",
															"src": "10632:130:4",
															"trueBody": {
																"id": 1065,
																"nodeType": "Block",
																"src": "10662:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1060,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "10714:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1061,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1043,
																					"src": "10723:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1062,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1039,
																					"src": "10741:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1059,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 460,
																				"src": "10687:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1064,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:4"
																	}
																]
															}
														},
														{
															"id": 1076,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1068,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1035,
																				"src": "10812:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1069,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1037,
																				"src": "10819:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1070,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1043,
																					"src": "10828:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1071,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1039,
																					"src": "10847:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1067,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				972,
																				1032
																			],
																			"referencedDeclaration": 1032,
																			"src": "10803:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1075,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 1081,
									"src": "10415:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1082,
							"src": "1106:9787:4",
							"usedErrors": [
								441,
								446,
								451,
								460,
								465,
								470
							],
							"usedEvents": [
								1093,
								1102
							]
						}
					],
					"src": "105:10789:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1159
						]
					},
					"id": 1160,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1083,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1084,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1159,
							"linearizedBaseContracts": [
								1159
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1093,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1102,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1159,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1159,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1159,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1159,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1159,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1155,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1159,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1160,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1093,
								1102
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1159
						],
						"IERC20Metadata": [
							1185
						]
					},
					"id": 1186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1161,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 1160,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1162,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1159,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1165,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1159,
										"src": "306:6:6"
									},
									"id": 1166,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1164,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1185,
							"linearizedBaseContracts": [
								1185,
								1159
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1169,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1185,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1185,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1181,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1185,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1186,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1093,
								1102
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1215
						]
					},
					"id": 1216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1187,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1188,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1215,
							"linearizedBaseContracts": [
								1215
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1193,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1192,
												"id": 1195,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1215,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1202,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1201,
												"id": 1204,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1215,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1210,
												"id": 1212,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1215,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1216,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1239
						],
						"IERC165": [
							1251
						]
					},
					"id": 1240,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1219,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1240,
							"sourceUnit": 1252,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1218,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1251,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1221,
										"name": "IERC165",
										"nameLocations": [
											"688:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1251,
										"src": "688:7:8"
									},
									"id": 1222,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1220,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1239,
							"linearizedBaseContracts": [
								1239,
								1251
							],
							"name": "ERC165",
							"nameLocation": "678:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1250
									],
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "845:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1230,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "862:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1232,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "882:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1251_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1251_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1231,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1251",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1236,
												"nodeType": "Return",
												"src": "855:47:8"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "790:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1224,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:8"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "839:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:8"
									},
									"scope": 1239,
									"src": "763:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1240,
							"src": "660:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1251
						]
					},
					"id": 1252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1241,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1242,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1251,
							"linearizedBaseContracts": [
								1251
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 1251,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1252,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			}
		}
	}
}